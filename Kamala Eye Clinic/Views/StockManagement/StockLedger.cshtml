@model Kamala_Eye_Clinic.Models.StockLedger

@{
    ViewBag.Title = "Stock Ledger";
    Layout = "~/Views/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-12 form-group">
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.itemname, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.itemname, Model.items, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.itemname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.unit, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.unit, Model.units, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.unit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.type, new SelectList(new[] { "Addtion", "Deduction" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-12 form-group">
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.qty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.openingqty, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.openingqty, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.openingqty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.closingqty, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.EditorFor(model => model.closingqty, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.closingqty, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-12 col-sm-12 form-group" align="center">
            <hr />
            @Html.HiddenFor(model => model.CMD)
            @if (Model.CMD == null)
                {
                <input type="submit" class="btn btn-default btn-info " value="Save" name="SubmitBtn" />
            }
            else
            {
                <input type="submit" class="btn btn-default btn-primary " value="Update" name="SubmitBtn" />
                @* <input type="submit" class="btn btn-default btn-danger" value="Delete" name="SubmitBtn" />*@
            }
            <input type="reset" class="btn btn-warning " value="Reset" />
        </div>
    </div>
}
