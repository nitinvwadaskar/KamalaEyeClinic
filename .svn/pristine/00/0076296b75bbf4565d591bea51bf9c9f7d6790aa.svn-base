@model Kamala_Eye_Clinic.Models.User

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/_Layout.cshtml";
}
<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>
                User Registration : <span style="font-size:14px">
                    @if (ViewBag != null)
                {
                        <label>@ViewBag.msg </label>
                    }
                </span>
            </h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-12  form-group">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.userrole, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.userrole, Model.Roles , new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.userrole, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12  form-group">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.mname, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.mname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.mname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12  form-group">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.cpassword, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.cpassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cpassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-4 form-group">
                    @Html.HiddenFor(model => model.CMD)
                    @if (Model.CMD == null)
                {
                        <input type="submit" class="btn btn-default btn-info" value="Save" name="SubmitBtn" />
                    }
                    else
                    {
                        <input type="submit" class="btn btn-default btn-primary" value="Update" name="SubmitBtn" />
                        <input type="submit" class="btn btn-default btn-danger" value="Delete" name="SubmitBtn" />
                    }
                    <input type="reset" class="btn btn-warning" value="Reset" />
                </div>
            </div>            
        </div>

    }

    <div>
        <a href="#">Back to List </a>
    </div>

    </div>

    @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
