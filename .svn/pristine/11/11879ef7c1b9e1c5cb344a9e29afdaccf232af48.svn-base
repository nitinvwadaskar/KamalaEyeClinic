using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Kamala_Eye_Clinic.Models;
using System.Data;
using System.Data.SqlClient;

namespace Kamala_Eye_Clinic.Controllers
{
    [Sessionclass]
    public class PatientController : Controller
    {

        /****************************************** Patient Registration  **************************************/


        public ViewResult Registration()
        {
            PatientMaster obj = new PatientMaster();
            return View(obj);
        }

        public ViewResult Update(int patientid)
        {
            PatientMaster obj = new PatientMaster();

            if (patientid > 0)
            {
                obj.CMD = "Update";
                obj = obj.GetSinglePatient(patientid, Convert.ToInt32(Session["hospital"].ToString()));

            }
            return View("Registration", obj);
        }
        [HttpPost]
        public ActionResult Update(PatientMaster obj, string SubmitBtn)
        {
            Registration(obj, SubmitBtn);
            if (SubmitBtn == "Delete") return Redirect("~/Patient/PatientDetails");
            return View("Registration", obj);
        }

        [HttpPost]
        public ActionResult Registration(PatientMaster obj, string SubmitBtn)
        {
            obj.CMD = SubmitBtn == "Save" ? "Save" : SubmitBtn == "Update" ? "Update" : "Delete";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            switch (obj.CMD)
            {
                case "Save":
                    obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                    string[] str = obj.PerformAction();
                    ViewBag.msg = str[1];
                    return View("Registration", obj);
                case "Update":
                    string[] str1 = obj.PerformAction();
                    ViewBag.msg = str1[2];
                    return View("Registration", obj);
                case "Delete":
                    string[] str2 = obj.PerformAction();
                    ViewBag.msg = str2[3];
                    return View("Registration", obj);
                default:
                    return View(obj);
            }

        }
        public ActionResult Select(int patientid)
        {
            PatientMaster obj = new PatientMaster();

            if (patientid > 0)
            {
                Session["PatientId"] = patientid;//hold only session id
                Session["PatientObj"] = obj = obj.GetSinglePatient(patientid, Convert.ToInt32(Session["hospital"].ToString()));//hold whole patient details            
            }
            return RedirectToAction("Dashboard", "Home");
        }

        public ActionResult PatientDetails()
        {
            PatientMaster obj = new PatientMaster();
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("SP_PatientView", xml);
            return View(dataset);
        }

        [HttpPost]
        public ActionResult PatientDetails(FormCollection form, string submitBtn)
        {
            switch (submitBtn)
            {
                case "Search":
                    PatientMaster obj = new Models.PatientMaster();
                    if (form["pid"] != "")
                    {
                        obj.patientid = Convert.ToInt32(form["pid"]);
                    }
                    else
                    {
                        obj.fname = form["fname"];
                        obj.lname = form["lname"];
                    }

                    obj.CMD = "View1";
                    obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                    string xml = Common.ToXML(obj);
                    DBConnection cn = new DBConnection();
                    DataSet dataset = cn.ExecuteProcedure("SP_PatientView", xml);
                    if (dataset.Tables[0].Rows[0][1].ToString() == "No Record Found")
                    {
                        ViewBag.Msg = "Record Not Found";
                    }
                    return View(dataset);
                case "ViewAll":
                    return RedirectToAction("PatientDetails");
                default:
                    return View();
            }
        }

        public ActionResult PatientSelection()
        {
            return View();
        }


        /****************************************** Discharge Details    **************************************/


        public ViewResult Discharge()
        {
            Discharge obj = new Discharge();
            obj.GetMultipleDoctor();
            return View(obj);
        }

        public ViewResult DischargeUpdate(int hid, int dischargeid, int patientid)
        {
            Discharge obj = new Discharge();

            if (dischargeid > 0)
            {
                obj.CMD = "Update";
                obj.patientid = patientid;
                obj.hid = hid;
                obj.GetMultipleDoctor();
                obj = obj.GetSingleDischarge(dischargeid);
            }
            return View("Discharge", obj);
        }
        [HttpPost]
        public ActionResult DischargeUpdate(Discharge obj, string SubmitBtn)
        {
            Discharge(obj, SubmitBtn);
            if (SubmitBtn == "Delete") return Redirect("~/Patient/DischargeDetails");
            return View("Discharge", obj);
        }

        [HttpPost]
        public ActionResult Discharge(Discharge obj, string SubmitBtn)
        {

            obj.CMD = SubmitBtn == "Save" ? "Save" : SubmitBtn == "Update" ? "Update" : "Delete";
            switch (obj.CMD)
            {
                case "Save":
                    obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                    obj.patientid = Convert.ToInt32(Session["patientid"].ToString());
                    string[] str = obj.PerformAction();
                    ViewBag.msg = str[1];
                    return RedirectToAction("DischargeDetails");
                case "Update":
                    string[] str1 = obj.PerformAction();
                    ViewBag.msg = str1[2];
                    return RedirectToAction("DischargeDetails");
                case "Delete":
                    string[] str2 = obj.PerformAction();
                    ViewBag.msg = str2[3];
                    return RedirectToAction("DischargeDetails");
                default:
                    return View(obj);
            }
        }

        public ViewResult DischargeDetails(Discharge obj)
        {
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            obj.patientid = Convert.ToInt32(Session["patientid"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("SP_Discharge", xml);
            return View(dataset);
        }


        /****************************************** Patient Appointment Details    **************************************/

        public ViewResult Appointment()
        {
            Appointment obj = new Models.Appointment();
            return View(obj);
        }

        [HttpPost]
        public ActionResult Appointment(FormCollection form, Appointment obj, string SubmitBtn)
        {
            obj.CMD = SubmitBtn == "Save" ? "Save" : SubmitBtn == "Update" ? "Update" : "Delete";
            switch (obj.CMD)
            {
                case "Save":
                    obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                    string[] str = obj.PerformAction();
                    ViewBag.msg = str[1];
                    return View("Appointment", obj);
                case "Update":
                    string[] str1 = obj.PerformAction();
                    ViewBag.msg = str1[2];
                    return View("Appointment", obj);
                case "Delete":
                    string[] str2 = obj.PerformAction();
                    ViewBag.msg = str2[3];
                    return View("Appointment", obj);
                default:
                    return View(obj);
            }
        }

        public ActionResult SetAppointment(int pid)
        {

            PatientMaster obj = new PatientMaster();

            if (pid > 0)
            {
                Session["PatientId"] = pid;//hold only session id
                Session["PatientObj"] = obj = obj.GetSinglePatient(pid, Convert.ToInt32(Session["hospital"].ToString()));//hold whole patient details            
            }
            return RedirectToAction("Appointment", "Patient", obj);
        }

        public ViewResult AppointmentUpdate(int hid, int appointmentid)
        {
            Appointment obj = new Appointment();

            if (appointmentid > 0)
            {
                obj.CMD = "Update";
                obj.appointmentid = appointmentid;
                obj.hid = hid;
                obj = obj.GetSingleAppointment(appointmentid);

            }
            return View("Appointment", obj);
        }
        [HttpPost]
        public ActionResult AppointmentUpdate(FormCollection form, Appointment obj, string SubmitBtn)
        {

            Appointment(form, obj, SubmitBtn);
            if (SubmitBtn == "Delete") return Redirect("~/Patient/AppointmentDetails");
            return View("AppointmentDetails", obj);
        }

        public ActionResult AppointmentDetails()
        {
            Appointment obj = new Models.Appointment();
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("SP_Appointment", xml);
            return View(dataset);
        }

        [HttpPost]
        public ActionResult AppointmentDetails(FormCollection form, string submitBtn)
        {
            switch (submitBtn)
            {
                case "Search":
                    Appointment obj = new Models.Appointment();
                    obj.fromdt = form["fromdate"];
                    obj.todt = form["todate"];

                    if (obj.fromdt != "" && obj.todt != "")
                    {
                        obj.CMD = "View2";
                        obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                        string xml = Common.ToXML(obj);
                        DBConnection cn = new DBConnection();
                        DataSet dataset = cn.ExecuteProcedure("SP_Appointment", xml);
                        return View(dataset);
                    }
                    else
                    {
                        return RedirectToAction("AppointmentDetails");
                    }
                case "ViewAll":
                    return RedirectToAction("AppointmentDetails");
                default:
                    return View();
            }
        }
        /****************************************** Consent Form Details    **************************************/

        public ViewResult ConsentForm()
        {
            ConsentMaster obj = new ConsentMaster();
            return View(obj);
        }

        [HttpPost]
        public ActionResult ConsentForm(ConsentMaster obj, string SubmitBtn)
        {

            obj.CMD = SubmitBtn == "Save" ? "Save" : SubmitBtn == "Update" ? "Update" : "Delete";
            switch (obj.CMD)
            {
                case "Save":
                    obj.hid = Convert.ToInt32(Session["hospital"].ToString());
                    obj.patientid = Convert.ToInt32(Session["patientid"].ToString());
                    string[] str = obj.PerformAction();
                    ViewBag.msg = str[1];
                    return RedirectToAction("ConsentDetails");
                case "Update":
                    string[] str1 = obj.PerformAction();
                    ViewBag.msg = str1[2];
                    return RedirectToAction("ConsentDetails");
                case "Delete":
                    string[] str2 = obj.PerformAction();
                    ViewBag.msg = str2[3];
                    return RedirectToAction("ConsentDetails");
                default:
                    return View(obj);
            }
        }

        public ViewResult ConsentFormUpdate(int hid, int consentid)
        {
            ConsentMaster obj = new ConsentMaster();

            if (consentid > 0)
            {
                obj.CMD = "Update";
                obj.consentid = consentid;
                obj.hid = hid;
                obj = obj.GetSingleConsent(consentid);
            }
            return View("ConsentForm", obj);
        }
        [HttpPost]
        public ActionResult ConsentFormUpdate(ConsentMaster obj, string SubmitBtn)
        {
            ConsentForm(obj, SubmitBtn);
            if (SubmitBtn == "Delete") return Redirect("~/Patient/ConsentDetails");
            return View("ConsentForm", obj);
        }

        public ViewResult ConsentDetails(ConsentMaster obj, string cmd)
        {
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            obj.patientid = Convert.ToInt32(Session["patientid"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("SP_Consent", xml);
            return View(dataset);
        }



        /********************************* Bill Details ********************************************/


        public ActionResult Bill()

        {
            Session["BillParticulars"] = null;
            ViewBag.BillParticulars = new List<BillParticulars>();
            ViewBag.Total = 0;
            return View();
        }

        [HttpPost]
        public ActionResult Bill(FormCollection form, string SubmitBtn)
        {
            List<BillParticulars> par = new List<BillParticulars>();
            if (Session["BillParticulars"] != null)
                par = (List<BillParticulars>)Session["BillParticulars"];
            else
                par = new List<BillParticulars>();

            switch (SubmitBtn)
            {

                case "Add":
                    BillParticulars p = new BillParticulars();
                    p.particular = form["particular"];
                    p.qty = Convert.ToInt32(form["qty"]);
                    p.charges = Convert.ToDecimal(form["charges"]);
                    p.total = p.qty * p.charges;
                    if (par.Where(q => q.particular == p.particular).Count() >= 1)
                        ViewBag.msg = "Particular already added.";
                    else
                        par.Add(p);
                    Session["BillParticulars"] = par;
                    break;
                case "Delete":
                    int index = Convert.ToInt32(form["srno"]);
                    par.RemoveAt(index);
                    break;
                case "Clear":
                    par = new List<BillParticulars>();
                    Session["BillParticulars"] = par;
                    break;
            }
            ViewBag.Total = par.Select(q => q.total).Sum();
            ViewBag.BillParticulars = Session["BillParticulars"];
            return View();
        }

        [HttpPost]
        public ActionResult Checkout(FormCollection form, string SubmitBtn)
        {
            List<BillParticulars> par = new List<BillParticulars>();
            if (Session["BillParticulars"] != null)
            {
                PatientBill pb = new PatientBill();
                if (SubmitBtn == "Checkout") { pb.CMD = "Save"; } else { pb.CMD = SubmitBtn; }

                pb.parlist = par = (List<BillParticulars>)Session["BillParticulars"];
                pb.totalamount = par.Select(q => q.total).Sum();
                pb.patientid = Convert.ToInt32(Session["patientid"] == null ? '0' : Session["patientid"]);
                pb.hid = Convert.ToInt32(Session["hospital"] == null ? '0' : Session["hospital"]);
                string billid = pb.PerformAction();
                PrintGenerator.GenerateBillPDF(Convert.ToInt32(billid.ToString()), pb.patientid, pb.hid, DateTime.Now);
                return RedirectToAction("BillDetails");
            }
            else
            {
                return View();
            }

        }

        public ViewResult ViewBills(int billid, DateTime billdate)
        {
            if (billid > 0)
            {
                PrintGenerator.GenerateBillPDF(billid, Convert.ToInt32(Session["patientid"].ToString()), Convert.ToInt32(Session["hospital"].ToString()), billdate);
            }
            return View();
        }

        public ViewResult BillDetails()
        {
            PatientBill obj = new PatientBill();
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            obj.patientid = Convert.ToInt32(Session["patientid"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("Sp_PatientFinalBill", xml);
            return View(dataset);
        }


        /************************** Treatment Details******************************/
        public ViewResult TreatmentHistory()
        {
            Treatment obj = new Treatment();
            DBConnection cn = new DBConnection();
            obj.CMD = "View";
            obj.hid = Convert.ToInt32(Session["hospital"].ToString());
            obj.patientId = Convert.ToInt32(Session["patientid"].ToString());
            string xml = Common.ToXML(obj);
            DataSet dataset = cn.ExecuteProcedure("SP_Treatment", xml);
            return View(dataset);
        }

        public ActionResult Treatment(int treatmentid = 0)
        {
            Treatment t = new Treatment();
            if (treatmentid > 0)
            {

                t.CMD = "View1";
                t.hid = Convert.ToInt32(Session["hospital"]);
                t.patientId = Convert.ToInt32(Session["PatientId"]);
                t.treatmentId = treatmentid;
                Treatment t1 = t.GetSingleTreatment();
                return View(t1);
            }
            else
            {
                TreatmentInvestigation ti = new TreatmentInvestigation();
                Session["TreatInvestigationList"] = t.TreatInvestigationList = ti.GetList();

                TreatmentMedicine tm = new TreatmentMedicine();
                tm.mischecked = tm.aischecked = tm.eischecked = tm.nischecked = false;

                Session["Investigations"] = null;
                Session["TreatmentMedicine"] = null;

                ViewBag.TreatmentMedicine = new List<TreatmentMedicine>();
                ViewBag.TreatmentInvestigation = new List<TreatmentInvestigation>();
                // ViewBag.TreatmentVision = new List<TreatmentVision>();     
                return View(t);
            }
        }

        [HttpPost]
        public ActionResult Treatment(FormCollection form, Treatment obj, string SubmitBtn)
        {
            int resetflag = 0;
            obj.CMD = SubmitBtn;
            obj.hid = Convert.ToInt32(Session["hospital"]);
            obj.patientId = Convert.ToInt32(Session["PatientId"]);
            

            List<TreatmentMedicine> tm = new List<TreatmentMedicine>();
            if (Session["TreatmentMedicine"] != null)
                tm = (List<TreatmentMedicine>)Session["TreatmentMedicine"];
            else
                tm = new List<TreatmentMedicine>();


            switch (SubmitBtn)
            {

                case "Add":
                    //
                    TreatmentMedicine t = new TreatmentMedicine();
                    t.a = obj.TreatMedicine.aischecked == true ? "A" : "";
                    t.m = obj.TreatMedicine.mischecked == true ? "M" : "";
                    t.e = obj.TreatMedicine.eischecked == true ? "E" : "";
                    t.n = obj.TreatMedicine.nischecked == true ? "N" : "";
                    var arr = form["particular"].ToString().Split(':');
                    t.medicineid = Convert.ToInt32(arr[0]);
                    t.particular = arr[1];
                    t.qty = obj.TreatMedicine.qty;
                    t.srno = obj.srno;
                    if (tm.Where(q => q.particular == t.particular).Count() >= 1)
                        ViewBag.msg = "Particular already added.";
                    else
                        tm.Add(t);

                    obj.TreatMedicineList = tm;
                    Session["TreatmentMedicine"] = tm;
                    break;

                case "Delete":
                    int index = Convert.ToInt32(form["srno"]);
                    tm.RemoveAt(index);
                    Session["TreatmentMedicine"] = obj.TreatMedicineList = tm;
                    //obj.TreatInvestigation = (TreatmentInvestigation)Session["Investigations"];                   
                    break;
                case "Reset":
                    resetflag = 1;

                    break;
                case "Save":
                    Session["TreatmentMedicine"] = obj.TreatMedicineList = tm;
                    string[] strarr = obj.PerformAction();
                    break;
                case "Update":
                    Session["TreatmentMedicine"] = obj.TreatMedicineList = tm;
                    string[] strarr1 = obj.PerformAction();
                    break;
            }
            if (Session["TreatInvestigationList"] != null)
                obj.TreatInvestigationList = (List<TreatmentInvestigation>)Session["TreatInvestigationList"];
            else
            {
                TreatmentInvestigation ti = new TreatmentInvestigation();
                Session["TreatInvestigationList"] = obj.TreatInvestigationList = ti.GetList();
            }
            if (resetflag == 1)
                return Redirect("/Patient/Treatment");

            return View(obj);
        }


    }
}