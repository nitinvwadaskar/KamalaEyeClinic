#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kamala_Eye_Clinic
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KamalaDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertbillParticular(billParticular instance);
    partial void UpdatebillParticular(billParticular instance);
    partial void DeletebillParticular(billParticular instance);
    partial void Inserttbl_appointment(tbl_appointment instance);
    partial void Updatetbl_appointment(tbl_appointment instance);
    partial void Deletetbl_appointment(tbl_appointment instance);
    partial void Inserttbl_billMst(tbl_billMst instance);
    partial void Updatetbl_billMst(tbl_billMst instance);
    partial void Deletetbl_billMst(tbl_billMst instance);
    partial void Inserttbl_billParticularMst(tbl_billParticularMst instance);
    partial void Updatetbl_billParticularMst(tbl_billParticularMst instance);
    partial void Deletetbl_billParticularMst(tbl_billParticularMst instance);
    partial void Inserttbl_consent(tbl_consent instance);
    partial void Updatetbl_consent(tbl_consent instance);
    partial void Deletetbl_consent(tbl_consent instance);
    partial void Inserttbl_discharge(tbl_discharge instance);
    partial void Updatetbl_discharge(tbl_discharge instance);
    partial void Deletetbl_discharge(tbl_discharge instance);
    partial void Inserttbl_doctorContact(tbl_doctorContact instance);
    partial void Updatetbl_doctorContact(tbl_doctorContact instance);
    partial void Deletetbl_doctorContact(tbl_doctorContact instance);
    partial void Inserttbl_doctorIdentity(tbl_doctorIdentity instance);
    partial void Updatetbl_doctorIdentity(tbl_doctorIdentity instance);
    partial void Deletetbl_doctorIdentity(tbl_doctorIdentity instance);
    partial void Inserttbl_doctorMst(tbl_doctorMst instance);
    partial void Updatetbl_doctorMst(tbl_doctorMst instance);
    partial void Deletetbl_doctorMst(tbl_doctorMst instance);
    partial void Inserttbl_drugcategory(tbl_drugcategory instance);
    partial void Updatetbl_drugcategory(tbl_drugcategory instance);
    partial void Deletetbl_drugcategory(tbl_drugcategory instance);
    partial void Inserttbl_drugMst(tbl_drugMst instance);
    partial void Updatetbl_drugMst(tbl_drugMst instance);
    partial void Deletetbl_drugMst(tbl_drugMst instance);
    partial void Inserttbl_Followup(tbl_Followup instance);
    partial void Updatetbl_Followup(tbl_Followup instance);
    partial void Deletetbl_Followup(tbl_Followup instance);
    partial void Inserttbl_hospital(tbl_hospital instance);
    partial void Updatetbl_hospital(tbl_hospital instance);
    partial void Deletetbl_hospital(tbl_hospital instance);
    partial void Inserttbl_patientContact(tbl_patientContact instance);
    partial void Updatetbl_patientContact(tbl_patientContact instance);
    partial void Deletetbl_patientContact(tbl_patientContact instance);
    partial void Inserttbl_patientIdentity(tbl_patientIdentity instance);
    partial void Updatetbl_patientIdentity(tbl_patientIdentity instance);
    partial void Deletetbl_patientIdentity(tbl_patientIdentity instance);
    partial void Inserttbl_patientInsuranceMst(tbl_patientInsuranceMst instance);
    partial void Updatetbl_patientInsuranceMst(tbl_patientInsuranceMst instance);
    partial void Deletetbl_patientInsuranceMst(tbl_patientInsuranceMst instance);
    partial void Inserttbl_patientMst(tbl_patientMst instance);
    partial void Updatetbl_patientMst(tbl_patientMst instance);
    partial void Deletetbl_patientMst(tbl_patientMst instance);
    partial void Inserttbl_role(tbl_role instance);
    partial void Updatetbl_role(tbl_role instance);
    partial void Deletetbl_role(tbl_role instance);
    partial void Inserttbl_sisterContact(tbl_sisterContact instance);
    partial void Updatetbl_sisterContact(tbl_sisterContact instance);
    partial void Deletetbl_sisterContact(tbl_sisterContact instance);
    partial void Inserttbl_sisterIdentity(tbl_sisterIdentity instance);
    partial void Updatetbl_sisterIdentity(tbl_sisterIdentity instance);
    partial void Deletetbl_sisterIdentity(tbl_sisterIdentity instance);
    partial void Inserttbl_sisterMst(tbl_sisterMst instance);
    partial void Updatetbl_sisterMst(tbl_sisterMst instance);
    partial void Deletetbl_sisterMst(tbl_sisterMst instance);
    partial void Inserttbl_treatdisease(tbl_treatdisease instance);
    partial void Updatetbl_treatdisease(tbl_treatdisease instance);
    partial void Deletetbl_treatdisease(tbl_treatdisease instance);
    partial void Inserttbl_treatinvestigation(tbl_treatinvestigation instance);
    partial void Updatetbl_treatinvestigation(tbl_treatinvestigation instance);
    partial void Deletetbl_treatinvestigation(tbl_treatinvestigation instance);
    partial void Inserttbl_treatmedicine(tbl_treatmedicine instance);
    partial void Updatetbl_treatmedicine(tbl_treatmedicine instance);
    partial void Deletetbl_treatmedicine(tbl_treatmedicine instance);
    partial void Inserttbl_treatment(tbl_treatment instance);
    partial void Updatetbl_treatment(tbl_treatment instance);
    partial void Deletetbl_treatment(tbl_treatment instance);
    partial void Inserttbl_treatVision(tbl_treatVision instance);
    partial void Updatetbl_treatVision(tbl_treatVision instance);
    partial void Deletetbl_treatVision(tbl_treatVision instance);
    partial void Inserttbl_user(tbl_user instance);
    partial void Updatetbl_user(tbl_user instance);
    partial void Deletetbl_user(tbl_user instance);
    #endregion
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<billParticular> billParticulars
		{
			get
			{
				return this.GetTable<billParticular>();
			}
		}
		
		public System.Data.Linq.Table<tbl_appointment> tbl_appointments
		{
			get
			{
				return this.GetTable<tbl_appointment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_billMst> tbl_billMsts
		{
			get
			{
				return this.GetTable<tbl_billMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_billParticularMst> tbl_billParticularMsts
		{
			get
			{
				return this.GetTable<tbl_billParticularMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_consent> tbl_consents
		{
			get
			{
				return this.GetTable<tbl_consent>();
			}
		}
		
		public System.Data.Linq.Table<tbl_discharge> tbl_discharges
		{
			get
			{
				return this.GetTable<tbl_discharge>();
			}
		}
		
		public System.Data.Linq.Table<tbl_doctorContact> tbl_doctorContacts
		{
			get
			{
				return this.GetTable<tbl_doctorContact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_doctorIdentity> tbl_doctorIdentities
		{
			get
			{
				return this.GetTable<tbl_doctorIdentity>();
			}
		}
		
		public System.Data.Linq.Table<tbl_doctorMst> tbl_doctorMsts
		{
			get
			{
				return this.GetTable<tbl_doctorMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_drugcategory> tbl_drugcategories
		{
			get
			{
				return this.GetTable<tbl_drugcategory>();
			}
		}
		
		public System.Data.Linq.Table<tbl_drugMst> tbl_drugMsts
		{
			get
			{
				return this.GetTable<tbl_drugMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Followup> tbl_Followups
		{
			get
			{
				return this.GetTable<tbl_Followup>();
			}
		}
		
		public System.Data.Linq.Table<tbl_hospital> tbl_hospitals
		{
			get
			{
				return this.GetTable<tbl_hospital>();
			}
		}
		
		public System.Data.Linq.Table<tbl_patientContact> tbl_patientContacts
		{
			get
			{
				return this.GetTable<tbl_patientContact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_patientIdentity> tbl_patientIdentities
		{
			get
			{
				return this.GetTable<tbl_patientIdentity>();
			}
		}
		
		public System.Data.Linq.Table<tbl_patientInsuranceMst> tbl_patientInsuranceMsts
		{
			get
			{
				return this.GetTable<tbl_patientInsuranceMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_patientMst> tbl_patientMsts
		{
			get
			{
				return this.GetTable<tbl_patientMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_role> tbl_roles
		{
			get
			{
				return this.GetTable<tbl_role>();
			}
		}
		
		public System.Data.Linq.Table<tbl_sisterContact> tbl_sisterContacts
		{
			get
			{
				return this.GetTable<tbl_sisterContact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_sisterIdentity> tbl_sisterIdentities
		{
			get
			{
				return this.GetTable<tbl_sisterIdentity>();
			}
		}
		
		public System.Data.Linq.Table<tbl_sisterMst> tbl_sisterMsts
		{
			get
			{
				return this.GetTable<tbl_sisterMst>();
			}
		}
		
		public System.Data.Linq.Table<tbl_treatdisease> tbl_treatdiseases
		{
			get
			{
				return this.GetTable<tbl_treatdisease>();
			}
		}
		
		public System.Data.Linq.Table<tbl_treatinvestigation> tbl_treatinvestigations
		{
			get
			{
				return this.GetTable<tbl_treatinvestigation>();
			}
		}
		
		public System.Data.Linq.Table<tbl_treatmedicine> tbl_treatmedicines
		{
			get
			{
				return this.GetTable<tbl_treatmedicine>();
			}
		}
		
		public System.Data.Linq.Table<tbl_treatment> tbl_treatments
		{
			get
			{
				return this.GetTable<tbl_treatment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_treatVision> tbl_treatVisions
		{
			get
			{
				return this.GetTable<tbl_treatVision>();
			}
		}
		
		public System.Data.Linq.Table<tbl_user> tbl_users
		{
			get
			{
				return this.GetTable<tbl_user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.billParticulars")]
	public partial class billParticular : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billid;
		
		private int _patientid;
		
		private int _particularid;
		
		private string _particular;
		
		private System.Nullable<int> _qty;
		
		private System.Nullable<decimal> _charges;
		
		private System.Nullable<decimal> _total;
		
		private EntityRef<tbl_billMst> _tbl_billMst;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbillidChanging(int value);
    partial void OnbillidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnparticularidChanging(int value);
    partial void OnparticularidChanged();
    partial void OnparticularChanging(string value);
    partial void OnparticularChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    partial void OnchargesChanging(System.Nullable<decimal> value);
    partial void OnchargesChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    #endregion
		
		public billParticular()
		{
			this._tbl_billMst = default(EntityRef<tbl_billMst>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int billid
		{
			get
			{
				return this._billid;
			}
			set
			{
				if ((this._billid != value))
				{
					if (this._tbl_billMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillidChanging(value);
					this.SendPropertyChanging();
					this._billid = value;
					this.SendPropertyChanged("billid");
					this.OnbillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_particularid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int particularid
		{
			get
			{
				return this._particularid;
			}
			set
			{
				if ((this._particularid != value))
				{
					this.OnparticularidChanging(value);
					this.SendPropertyChanging();
					this._particularid = value;
					this.SendPropertyChanged("particularid");
					this.OnparticularidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_particular", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string particular
		{
			get
			{
				return this._particular;
			}
			set
			{
				if ((this._particular != value))
				{
					this.OnparticularChanging(value);
					this.SendPropertyChanging();
					this._particular = value;
					this.SendPropertyChanged("particular");
					this.OnparticularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charges", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> charges
		{
			get
			{
				return this._charges;
			}
			set
			{
				if ((this._charges != value))
				{
					this.OnchargesChanging(value);
					this.SendPropertyChanging();
					this._charges = value;
					this.SendPropertyChanged("charges");
					this.OnchargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_billMst_billParticular", Storage="_tbl_billMst", ThisKey="billid", OtherKey="billid", IsForeignKey=true)]
		public tbl_billMst tbl_billMst
		{
			get
			{
				return this._tbl_billMst.Entity;
			}
			set
			{
				tbl_billMst previousValue = this._tbl_billMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_billMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_billMst.Entity = null;
						previousValue.billParticulars.Remove(this);
					}
					this._tbl_billMst.Entity = value;
					if ((value != null))
					{
						value.billParticulars.Add(this);
						this._billid = value.billid;
					}
					else
					{
						this._billid = default(int);
					}
					this.SendPropertyChanged("tbl_billMst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_billParticular", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.billParticulars.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.billParticulars.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_appointment")]
	public partial class tbl_appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _appointmentid;
		
		private System.Nullable<System.DateTime> _appointment_dt;
		
		private string _patientname;
		
		private string _contact;
		
		private string _paddress;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnappointmentidChanging(int value);
    partial void OnappointmentidChanged();
    partial void Onappointment_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onappointment_dtChanged();
    partial void OnpatientnameChanging(string value);
    partial void OnpatientnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnpaddressChanging(string value);
    partial void OnpaddressChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_appointment()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointmentid
		{
			get
			{
				return this._appointmentid;
			}
			set
			{
				if ((this._appointmentid != value))
				{
					this.OnappointmentidChanging(value);
					this.SendPropertyChanging();
					this._appointmentid = value;
					this.SendPropertyChanged("appointmentid");
					this.OnappointmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointment_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> appointment_dt
		{
			get
			{
				return this._appointment_dt;
			}
			set
			{
				if ((this._appointment_dt != value))
				{
					this.Onappointment_dtChanging(value);
					this.SendPropertyChanging();
					this._appointment_dt = value;
					this.SendPropertyChanged("appointment_dt");
					this.Onappointment_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientname", DbType="VarChar(20)")]
		public string patientname
		{
			get
			{
				return this._patientname;
			}
			set
			{
				if ((this._patientname != value))
				{
					this.OnpatientnameChanging(value);
					this.SendPropertyChanging();
					this._patientname = value;
					this.SendPropertyChanged("patientname");
					this.OnpatientnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(10)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paddress", DbType="VarChar(20)")]
		public string paddress
		{
			get
			{
				return this._paddress;
			}
			set
			{
				if ((this._paddress != value))
				{
					this.OnpaddressChanging(value);
					this.SendPropertyChanging();
					this._paddress = value;
					this.SendPropertyChanged("paddress");
					this.OnpaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_appointment", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_appointments.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_appointments.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_billMst")]
	public partial class tbl_billMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _billid;
		
		private int _patientid;
		
		private System.Nullable<System.DateTime> _bill_dt;
		
		private System.Nullable<decimal> _totalamount;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<billParticular> _billParticulars;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OnbillidChanging(int value);
    partial void OnbillidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void Onbill_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onbill_dtChanged();
    partial void OntotalamountChanging(System.Nullable<decimal> value);
    partial void OntotalamountChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_billMst()
		{
			this._billParticulars = new EntitySet<billParticular>(new Action<billParticular>(this.attach_billParticulars), new Action<billParticular>(this.detach_billParticulars));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int billid
		{
			get
			{
				return this._billid;
			}
			set
			{
				if ((this._billid != value))
				{
					this.OnbillidChanging(value);
					this.SendPropertyChanging();
					this._billid = value;
					this.SendPropertyChanged("billid");
					this.OnbillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL")]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_dt", DbType="Date")]
		public System.Nullable<System.DateTime> bill_dt
		{
			get
			{
				return this._bill_dt;
			}
			set
			{
				if ((this._bill_dt != value))
				{
					this.Onbill_dtChanging(value);
					this.SendPropertyChanging();
					this._bill_dt = value;
					this.SendPropertyChanged("bill_dt");
					this.Onbill_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalamount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> totalamount
		{
			get
			{
				return this._totalamount;
			}
			set
			{
				if ((this._totalamount != value))
				{
					this.OntotalamountChanging(value);
					this.SendPropertyChanging();
					this._totalamount = value;
					this.SendPropertyChanged("totalamount");
					this.OntotalamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_billMst_billParticular", Storage="_billParticulars", ThisKey="billid", OtherKey="billid")]
		public EntitySet<billParticular> billParticulars
		{
			get
			{
				return this._billParticulars;
			}
			set
			{
				this._billParticulars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_billMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_billMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_billMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_billMst", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_billMsts.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_billMsts.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billParticulars(billParticular entity)
		{
			this.SendPropertyChanging();
			entity.tbl_billMst = this;
		}
		
		private void detach_billParticulars(billParticular entity)
		{
			this.SendPropertyChanging();
			entity.tbl_billMst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_billParticularMst")]
	public partial class tbl_billParticularMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _particularid;
		
		private string _name;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnparticularidChanging(int value);
    partial void OnparticularidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_billParticularMst()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_particularid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int particularid
		{
			get
			{
				return this._particularid;
			}
			set
			{
				if ((this._particularid != value))
				{
					this.OnparticularidChanging(value);
					this.SendPropertyChanging();
					this._particularid = value;
					this.SendPropertyChanged("particularid");
					this.OnparticularidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_billParticularMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_billParticularMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_billParticularMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_consent")]
	public partial class tbl_consent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _consentid;
		
		private int _patientid;
		
		private string _visitorname;
		
		private string _witnessname;
		
		private string _place;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnconsentidChanging(int value);
    partial void OnconsentidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnvisitornameChanging(string value);
    partial void OnvisitornameChanged();
    partial void OnwitnessnameChanging(string value);
    partial void OnwitnessnameChanged();
    partial void OnplaceChanging(string value);
    partial void OnplaceChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_consent()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consentid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int consentid
		{
			get
			{
				return this._consentid;
			}
			set
			{
				if ((this._consentid != value))
				{
					this.OnconsentidChanging(value);
					this.SendPropertyChanging();
					this._consentid = value;
					this.SendPropertyChanged("consentid");
					this.OnconsentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitorname", DbType="VarChar(20)")]
		public string visitorname
		{
			get
			{
				return this._visitorname;
			}
			set
			{
				if ((this._visitorname != value))
				{
					this.OnvisitornameChanging(value);
					this.SendPropertyChanging();
					this._visitorname = value;
					this.SendPropertyChanged("visitorname");
					this.OnvisitornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_witnessname", DbType="VarChar(20)")]
		public string witnessname
		{
			get
			{
				return this._witnessname;
			}
			set
			{
				if ((this._witnessname != value))
				{
					this.OnwitnessnameChanging(value);
					this.SendPropertyChanging();
					this._witnessname = value;
					this.SendPropertyChanged("witnessname");
					this.OnwitnessnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place", DbType="VarChar(20)")]
		public string place
		{
			get
			{
				return this._place;
			}
			set
			{
				if ((this._place != value))
				{
					this.OnplaceChanging(value);
					this.SendPropertyChanging();
					this._place = value;
					this.SendPropertyChanged("place");
					this.OnplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_consent", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_consents.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_consents.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_consent", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_consents.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_consents.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_discharge")]
	public partial class tbl_discharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _dischargeid;
		
		private int _patientid;
		
		private string _reasonofdischarge;
		
		private string _doctorincharge;
		
		private string _eye;
		
		private string _operation;
		
		private string _treatmentadvice;
		
		private string _treatmentinword;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OndischargeidChanging(int value);
    partial void OndischargeidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnreasonofdischargeChanging(string value);
    partial void OnreasonofdischargeChanged();
    partial void OndoctorinchargeChanging(string value);
    partial void OndoctorinchargeChanged();
    partial void OneyeChanging(string value);
    partial void OneyeChanged();
    partial void OnoperationChanging(string value);
    partial void OnoperationChanged();
    partial void OntreatmentadviceChanging(string value);
    partial void OntreatmentadviceChanged();
    partial void OntreatmentinwordChanging(string value);
    partial void OntreatmentinwordChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_discharge()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dischargeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dischargeid
		{
			get
			{
				return this._dischargeid;
			}
			set
			{
				if ((this._dischargeid != value))
				{
					this.OndischargeidChanging(value);
					this.SendPropertyChanging();
					this._dischargeid = value;
					this.SendPropertyChanged("dischargeid");
					this.OndischargeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reasonofdischarge", DbType="VarChar(20)")]
		public string reasonofdischarge
		{
			get
			{
				return this._reasonofdischarge;
			}
			set
			{
				if ((this._reasonofdischarge != value))
				{
					this.OnreasonofdischargeChanging(value);
					this.SendPropertyChanging();
					this._reasonofdischarge = value;
					this.SendPropertyChanged("reasonofdischarge");
					this.OnreasonofdischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorincharge", DbType="VarChar(20)")]
		public string doctorincharge
		{
			get
			{
				return this._doctorincharge;
			}
			set
			{
				if ((this._doctorincharge != value))
				{
					this.OndoctorinchargeChanging(value);
					this.SendPropertyChanging();
					this._doctorincharge = value;
					this.SendPropertyChanged("doctorincharge");
					this.OndoctorinchargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eye", DbType="Char(2)")]
		public string eye
		{
			get
			{
				return this._eye;
			}
			set
			{
				if ((this._eye != value))
				{
					this.OneyeChanging(value);
					this.SendPropertyChanging();
					this._eye = value;
					this.SendPropertyChanged("eye");
					this.OneyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operation", DbType="VarChar(255)")]
		public string operation
		{
			get
			{
				return this._operation;
			}
			set
			{
				if ((this._operation != value))
				{
					this.OnoperationChanging(value);
					this.SendPropertyChanging();
					this._operation = value;
					this.SendPropertyChanged("operation");
					this.OnoperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentadvice", DbType="VarChar(255)")]
		public string treatmentadvice
		{
			get
			{
				return this._treatmentadvice;
			}
			set
			{
				if ((this._treatmentadvice != value))
				{
					this.OntreatmentadviceChanging(value);
					this.SendPropertyChanging();
					this._treatmentadvice = value;
					this.SendPropertyChanged("treatmentadvice");
					this.OntreatmentadviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentinword", DbType="VarChar(255)")]
		public string treatmentinword
		{
			get
			{
				return this._treatmentinword;
			}
			set
			{
				if ((this._treatmentinword != value))
				{
					this.OntreatmentinwordChanging(value);
					this.SendPropertyChanging();
					this._treatmentinword = value;
					this.SendPropertyChanged("treatmentinword");
					this.OntreatmentinwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_discharge", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_discharges.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_discharges.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_discharge", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_discharges.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_discharges.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_doctorContact")]
	public partial class tbl_doctorContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorid;
		
		private int _addressid;
		
		private string _taddress;
		
		private string _tcity;
		
		private string _tcountry;
		
		private string _tstate;
		
		private string _tdistrict;
		
		private string _tpin;
		
		private string _paddress;
		
		private string _pcity;
		
		private string _pcountry;
		
		private string _pstate;
		
		private string _pdistrict;
		
		private string _ppin;
		
		private string _pmobile;
		
		private string _amobile;
		
		private string _phone;
		
		private string _pemail;
		
		private string _aemail;
		
		private EntityRef<tbl_doctorMst> _tbl_doctorMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OnaddressidChanging(int value);
    partial void OnaddressidChanged();
    partial void OntaddressChanging(string value);
    partial void OntaddressChanged();
    partial void OntcityChanging(string value);
    partial void OntcityChanged();
    partial void OntcountryChanging(string value);
    partial void OntcountryChanged();
    partial void OntstateChanging(string value);
    partial void OntstateChanged();
    partial void OntdistrictChanging(string value);
    partial void OntdistrictChanged();
    partial void OntpinChanging(string value);
    partial void OntpinChanged();
    partial void OnpaddressChanging(string value);
    partial void OnpaddressChanged();
    partial void OnpcityChanging(string value);
    partial void OnpcityChanged();
    partial void OnpcountryChanging(string value);
    partial void OnpcountryChanged();
    partial void OnpstateChanging(string value);
    partial void OnpstateChanged();
    partial void OnpdistrictChanging(string value);
    partial void OnpdistrictChanged();
    partial void OnppinChanging(string value);
    partial void OnppinChanged();
    partial void OnpmobileChanging(string value);
    partial void OnpmobileChanged();
    partial void OnamobileChanging(string value);
    partial void OnamobileChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpemailChanging(string value);
    partial void OnpemailChanged();
    partial void OnaemailChanging(string value);
    partial void OnaemailChanged();
    #endregion
		
		public tbl_doctorContact()
		{
			this._tbl_doctorMst = default(EntityRef<tbl_doctorMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					if (this._tbl_doctorMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int addressid
		{
			get
			{
				return this._addressid;
			}
			set
			{
				if ((this._addressid != value))
				{
					this.OnaddressidChanging(value);
					this.SendPropertyChanging();
					this._addressid = value;
					this.SendPropertyChanged("addressid");
					this.OnaddressidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taddress", DbType="VarChar(255)")]
		public string taddress
		{
			get
			{
				return this._taddress;
			}
			set
			{
				if ((this._taddress != value))
				{
					this.OntaddressChanging(value);
					this.SendPropertyChanging();
					this._taddress = value;
					this.SendPropertyChanged("taddress");
					this.OntaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcity", DbType="VarChar(20)")]
		public string tcity
		{
			get
			{
				return this._tcity;
			}
			set
			{
				if ((this._tcity != value))
				{
					this.OntcityChanging(value);
					this.SendPropertyChanging();
					this._tcity = value;
					this.SendPropertyChanged("tcity");
					this.OntcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcountry", DbType="VarChar(20)")]
		public string tcountry
		{
			get
			{
				return this._tcountry;
			}
			set
			{
				if ((this._tcountry != value))
				{
					this.OntcountryChanging(value);
					this.SendPropertyChanging();
					this._tcountry = value;
					this.SendPropertyChanged("tcountry");
					this.OntcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstate", DbType="VarChar(20)")]
		public string tstate
		{
			get
			{
				return this._tstate;
			}
			set
			{
				if ((this._tstate != value))
				{
					this.OntstateChanging(value);
					this.SendPropertyChanging();
					this._tstate = value;
					this.SendPropertyChanged("tstate");
					this.OntstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tdistrict", DbType="VarChar(20)")]
		public string tdistrict
		{
			get
			{
				return this._tdistrict;
			}
			set
			{
				if ((this._tdistrict != value))
				{
					this.OntdistrictChanging(value);
					this.SendPropertyChanging();
					this._tdistrict = value;
					this.SendPropertyChanged("tdistrict");
					this.OntdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpin", DbType="VarChar(6)")]
		public string tpin
		{
			get
			{
				return this._tpin;
			}
			set
			{
				if ((this._tpin != value))
				{
					this.OntpinChanging(value);
					this.SendPropertyChanging();
					this._tpin = value;
					this.SendPropertyChanged("tpin");
					this.OntpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paddress", DbType="VarChar(255)")]
		public string paddress
		{
			get
			{
				return this._paddress;
			}
			set
			{
				if ((this._paddress != value))
				{
					this.OnpaddressChanging(value);
					this.SendPropertyChanging();
					this._paddress = value;
					this.SendPropertyChanged("paddress");
					this.OnpaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcity", DbType="VarChar(20)")]
		public string pcity
		{
			get
			{
				return this._pcity;
			}
			set
			{
				if ((this._pcity != value))
				{
					this.OnpcityChanging(value);
					this.SendPropertyChanging();
					this._pcity = value;
					this.SendPropertyChanged("pcity");
					this.OnpcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcountry", DbType="VarChar(20)")]
		public string pcountry
		{
			get
			{
				return this._pcountry;
			}
			set
			{
				if ((this._pcountry != value))
				{
					this.OnpcountryChanging(value);
					this.SendPropertyChanging();
					this._pcountry = value;
					this.SendPropertyChanged("pcountry");
					this.OnpcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pstate", DbType="VarChar(20)")]
		public string pstate
		{
			get
			{
				return this._pstate;
			}
			set
			{
				if ((this._pstate != value))
				{
					this.OnpstateChanging(value);
					this.SendPropertyChanging();
					this._pstate = value;
					this.SendPropertyChanged("pstate");
					this.OnpstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdistrict", DbType="VarChar(20)")]
		public string pdistrict
		{
			get
			{
				return this._pdistrict;
			}
			set
			{
				if ((this._pdistrict != value))
				{
					this.OnpdistrictChanging(value);
					this.SendPropertyChanging();
					this._pdistrict = value;
					this.SendPropertyChanged("pdistrict");
					this.OnpdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ppin", DbType="VarChar(6)")]
		public string ppin
		{
			get
			{
				return this._ppin;
			}
			set
			{
				if ((this._ppin != value))
				{
					this.OnppinChanging(value);
					this.SendPropertyChanging();
					this._ppin = value;
					this.SendPropertyChanged("ppin");
					this.OnppinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pmobile", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string pmobile
		{
			get
			{
				return this._pmobile;
			}
			set
			{
				if ((this._pmobile != value))
				{
					this.OnpmobileChanging(value);
					this.SendPropertyChanging();
					this._pmobile = value;
					this.SendPropertyChanged("pmobile");
					this.OnpmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amobile", DbType="VarChar(10)")]
		public string amobile
		{
			get
			{
				return this._amobile;
			}
			set
			{
				if ((this._amobile != value))
				{
					this.OnamobileChanging(value);
					this.SendPropertyChanging();
					this._amobile = value;
					this.SendPropertyChanged("amobile");
					this.OnamobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pemail", DbType="VarChar(25)")]
		public string pemail
		{
			get
			{
				return this._pemail;
			}
			set
			{
				if ((this._pemail != value))
				{
					this.OnpemailChanging(value);
					this.SendPropertyChanging();
					this._pemail = value;
					this.SendPropertyChanged("pemail");
					this.OnpemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aemail", DbType="VarChar(25)")]
		public string aemail
		{
			get
			{
				return this._aemail;
			}
			set
			{
				if ((this._aemail != value))
				{
					this.OnaemailChanging(value);
					this.SendPropertyChanging();
					this._aemail = value;
					this.SendPropertyChanged("aemail");
					this.OnaemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_doctorMst_tbl_doctorContact", Storage="_tbl_doctorMst", ThisKey="doctorid", OtherKey="doctorid", IsForeignKey=true)]
		public tbl_doctorMst tbl_doctorMst
		{
			get
			{
				return this._tbl_doctorMst.Entity;
			}
			set
			{
				tbl_doctorMst previousValue = this._tbl_doctorMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_doctorMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_doctorMst.Entity = null;
						previousValue.tbl_doctorContacts.Remove(this);
					}
					this._tbl_doctorMst.Entity = value;
					if ((value != null))
					{
						value.tbl_doctorContacts.Add(this);
						this._doctorid = value.doctorid;
					}
					else
					{
						this._doctorid = default(int);
					}
					this.SendPropertyChanged("tbl_doctorMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_doctorIdentity")]
	public partial class tbl_doctorIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorid;
		
		private int _doctoridentityid;
		
		private string _aadharid;
		
		private string _passportid;
		
		private string _panid;
		
		private string _voterid;
		
		private string _empoyeeid;
		
		private EntityRef<tbl_doctorMst> _tbl_doctorMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OndoctoridentityidChanging(int value);
    partial void OndoctoridentityidChanged();
    partial void OnaadharidChanging(string value);
    partial void OnaadharidChanged();
    partial void OnpassportidChanging(string value);
    partial void OnpassportidChanged();
    partial void OnpanidChanging(string value);
    partial void OnpanidChanged();
    partial void OnvoteridChanging(string value);
    partial void OnvoteridChanged();
    partial void OnempoyeeidChanging(string value);
    partial void OnempoyeeidChanged();
    #endregion
		
		public tbl_doctorIdentity()
		{
			this._tbl_doctorMst = default(EntityRef<tbl_doctorMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					if (this._tbl_doctorMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctoridentityid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctoridentityid
		{
			get
			{
				return this._doctoridentityid;
			}
			set
			{
				if ((this._doctoridentityid != value))
				{
					this.OndoctoridentityidChanging(value);
					this.SendPropertyChanging();
					this._doctoridentityid = value;
					this.SendPropertyChanged("doctoridentityid");
					this.OndoctoridentityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aadharid", DbType="VarChar(20)")]
		public string aadharid
		{
			get
			{
				return this._aadharid;
			}
			set
			{
				if ((this._aadharid != value))
				{
					this.OnaadharidChanging(value);
					this.SendPropertyChanging();
					this._aadharid = value;
					this.SendPropertyChanged("aadharid");
					this.OnaadharidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passportid", DbType="VarChar(15)")]
		public string passportid
		{
			get
			{
				return this._passportid;
			}
			set
			{
				if ((this._passportid != value))
				{
					this.OnpassportidChanging(value);
					this.SendPropertyChanging();
					this._passportid = value;
					this.SendPropertyChanged("passportid");
					this.OnpassportidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_panid", DbType="VarChar(10)")]
		public string panid
		{
			get
			{
				return this._panid;
			}
			set
			{
				if ((this._panid != value))
				{
					this.OnpanidChanging(value);
					this.SendPropertyChanging();
					this._panid = value;
					this.SendPropertyChanged("panid");
					this.OnpanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voterid", DbType="VarChar(15)")]
		public string voterid
		{
			get
			{
				return this._voterid;
			}
			set
			{
				if ((this._voterid != value))
				{
					this.OnvoteridChanging(value);
					this.SendPropertyChanging();
					this._voterid = value;
					this.SendPropertyChanged("voterid");
					this.OnvoteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empoyeeid", DbType="VarChar(15)")]
		public string empoyeeid
		{
			get
			{
				return this._empoyeeid;
			}
			set
			{
				if ((this._empoyeeid != value))
				{
					this.OnempoyeeidChanging(value);
					this.SendPropertyChanging();
					this._empoyeeid = value;
					this.SendPropertyChanged("empoyeeid");
					this.OnempoyeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_doctorMst_tbl_doctorIdentity", Storage="_tbl_doctorMst", ThisKey="doctorid", OtherKey="doctorid", IsForeignKey=true)]
		public tbl_doctorMst tbl_doctorMst
		{
			get
			{
				return this._tbl_doctorMst.Entity;
			}
			set
			{
				tbl_doctorMst previousValue = this._tbl_doctorMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_doctorMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_doctorMst.Entity = null;
						previousValue.tbl_doctorIdentities.Remove(this);
					}
					this._tbl_doctorMst.Entity = value;
					if ((value != null))
					{
						value.tbl_doctorIdentities.Add(this);
						this._doctorid = value.doctorid;
					}
					else
					{
						this._doctorid = default(int);
					}
					this.SendPropertyChanged("tbl_doctorMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_doctorMst")]
	public partial class tbl_doctorMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _doctorid;
		
		private System.Nullable<System.DateTime> _reg_dt;
		
		private string _fname;
		
		private string _mname;
		
		private string _lname;
		
		private string _contact;
		
		private System.Nullable<System.DateTime> _dob;
		
		private string _birthplace;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<char> _gender;
		
		private System.Nullable<char> _maritalstatus;
		
		private string _bloodgroup;
		
		private System.Nullable<decimal> _dheight;
		
		private System.Nullable<decimal> _dweight;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_doctorContact> _tbl_doctorContacts;
		
		private EntitySet<tbl_doctorIdentity> _tbl_doctorIdentities;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void Onreg_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreg_dtChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void OnbirthplaceChanging(string value);
    partial void OnbirthplaceChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OngenderChanging(System.Nullable<char> value);
    partial void OngenderChanged();
    partial void OnmaritalstatusChanging(System.Nullable<char> value);
    partial void OnmaritalstatusChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OndheightChanging(System.Nullable<decimal> value);
    partial void OndheightChanged();
    partial void OndweightChanging(System.Nullable<decimal> value);
    partial void OndweightChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_doctorMst()
		{
			this._tbl_doctorContacts = new EntitySet<tbl_doctorContact>(new Action<tbl_doctorContact>(this.attach_tbl_doctorContacts), new Action<tbl_doctorContact>(this.detach_tbl_doctorContacts));
			this._tbl_doctorIdentities = new EntitySet<tbl_doctorIdentity>(new Action<tbl_doctorIdentity>(this.attach_tbl_doctorIdentities), new Action<tbl_doctorIdentity>(this.detach_tbl_doctorIdentities));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> reg_dt
		{
			get
			{
				return this._reg_dt;
			}
			set
			{
				if ((this._reg_dt != value))
				{
					this.Onreg_dtChanging(value);
					this.SendPropertyChanging();
					this._reg_dt = value;
					this.SendPropertyChanged("reg_dt");
					this.Onreg_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(10)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(10)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(10)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(10)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthplace", DbType="VarChar(15)")]
		public string birthplace
		{
			get
			{
				return this._birthplace;
			}
			set
			{
				if ((this._birthplace != value))
				{
					this.OnbirthplaceChanging(value);
					this.SendPropertyChanging();
					this._birthplace = value;
					this.SendPropertyChanged("birthplace");
					this.OnbirthplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1)")]
		public System.Nullable<char> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="Char(1)")]
		public System.Nullable<char> maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(3)")]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dheight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> dheight
		{
			get
			{
				return this._dheight;
			}
			set
			{
				if ((this._dheight != value))
				{
					this.OndheightChanging(value);
					this.SendPropertyChanging();
					this._dheight = value;
					this.SendPropertyChanged("dheight");
					this.OndheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dweight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> dweight
		{
			get
			{
				return this._dweight;
			}
			set
			{
				if ((this._dweight != value))
				{
					this.OndweightChanging(value);
					this.SendPropertyChanging();
					this._dweight = value;
					this.SendPropertyChanged("dweight");
					this.OndweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_doctorMst_tbl_doctorContact", Storage="_tbl_doctorContacts", ThisKey="doctorid", OtherKey="doctorid")]
		public EntitySet<tbl_doctorContact> tbl_doctorContacts
		{
			get
			{
				return this._tbl_doctorContacts;
			}
			set
			{
				this._tbl_doctorContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_doctorMst_tbl_doctorIdentity", Storage="_tbl_doctorIdentities", ThisKey="doctorid", OtherKey="doctorid")]
		public EntitySet<tbl_doctorIdentity> tbl_doctorIdentities
		{
			get
			{
				return this._tbl_doctorIdentities;
			}
			set
			{
				this._tbl_doctorIdentities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_doctorMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_doctorMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_doctorMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_doctorContacts(tbl_doctorContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_doctorMst = this;
		}
		
		private void detach_tbl_doctorContacts(tbl_doctorContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_doctorMst = null;
		}
		
		private void attach_tbl_doctorIdentities(tbl_doctorIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_doctorMst = this;
		}
		
		private void detach_tbl_doctorIdentities(tbl_doctorIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_doctorMst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_drugcategory")]
	public partial class tbl_drugcategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _categoryid;
		
		private string _categoryname;
		
		private string _cdescription;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_drugMst> _tbl_drugMsts;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OncategorynameChanging(string value);
    partial void OncategorynameChanged();
    partial void OncdescriptionChanging(string value);
    partial void OncdescriptionChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_drugcategory()
		{
			this._tbl_drugMsts = new EntitySet<tbl_drugMst>(new Action<tbl_drugMst>(this.attach_tbl_drugMsts), new Action<tbl_drugMst>(this.detach_tbl_drugMsts));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string categoryname
		{
			get
			{
				return this._categoryname;
			}
			set
			{
				if ((this._categoryname != value))
				{
					this.OncategorynameChanging(value);
					this.SendPropertyChanging();
					this._categoryname = value;
					this.SendPropertyChanged("categoryname");
					this.OncategorynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdescription", DbType="VarChar(255)")]
		public string cdescription
		{
			get
			{
				return this._cdescription;
			}
			set
			{
				if ((this._cdescription != value))
				{
					this.OncdescriptionChanging(value);
					this.SendPropertyChanging();
					this._cdescription = value;
					this.SendPropertyChanged("cdescription");
					this.OncdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_drugcategory_tbl_drugMst", Storage="_tbl_drugMsts", ThisKey="categoryid", OtherKey="categoryid")]
		public EntitySet<tbl_drugMst> tbl_drugMsts
		{
			get
			{
				return this._tbl_drugMsts;
			}
			set
			{
				this._tbl_drugMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_drugcategory", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_drugcategories.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_drugcategories.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_drugMsts(tbl_drugMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_drugcategory = this;
		}
		
		private void detach_tbl_drugMsts(tbl_drugMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_drugcategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_drugMst")]
	public partial class tbl_drugMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _drugid;
		
		private int _categoryid;
		
		private string _drugname;
		
		private string _ddescription;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_drugcategory> _tbl_drugcategory;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OndrugidChanging(int value);
    partial void OndrugidChanged();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OndrugnameChanging(string value);
    partial void OndrugnameChanged();
    partial void OnddescriptionChanging(string value);
    partial void OnddescriptionChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_drugMst()
		{
			this._tbl_drugcategory = default(EntityRef<tbl_drugcategory>);
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int drugid
		{
			get
			{
				return this._drugid;
			}
			set
			{
				if ((this._drugid != value))
				{
					this.OndrugidChanging(value);
					this.SendPropertyChanging();
					this._drugid = value;
					this.SendPropertyChanged("drugid");
					this.OndrugidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					if (this._tbl_drugcategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string drugname
		{
			get
			{
				return this._drugname;
			}
			set
			{
				if ((this._drugname != value))
				{
					this.OndrugnameChanging(value);
					this.SendPropertyChanging();
					this._drugname = value;
					this.SendPropertyChanged("drugname");
					this.OndrugnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ddescription", DbType="VarChar(255)")]
		public string ddescription
		{
			get
			{
				return this._ddescription;
			}
			set
			{
				if ((this._ddescription != value))
				{
					this.OnddescriptionChanging(value);
					this.SendPropertyChanging();
					this._ddescription = value;
					this.SendPropertyChanged("ddescription");
					this.OnddescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_drugcategory_tbl_drugMst", Storage="_tbl_drugcategory", ThisKey="categoryid", OtherKey="categoryid", IsForeignKey=true)]
		public tbl_drugcategory tbl_drugcategory
		{
			get
			{
				return this._tbl_drugcategory.Entity;
			}
			set
			{
				tbl_drugcategory previousValue = this._tbl_drugcategory.Entity;
				if (((previousValue != value) 
							|| (this._tbl_drugcategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_drugcategory.Entity = null;
						previousValue.tbl_drugMsts.Remove(this);
					}
					this._tbl_drugcategory.Entity = value;
					if ((value != null))
					{
						value.tbl_drugMsts.Add(this);
						this._categoryid = value.categoryid;
					}
					else
					{
						this._categoryid = default(int);
					}
					this.SendPropertyChanged("tbl_drugcategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_drugMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_drugMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_drugMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Followup")]
	public partial class tbl_Followup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _followupid;
		
		private int _patientid;
		
		private System.Nullable<System.DateTime> _followupdate;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnfollowupidChanging(int value);
    partial void OnfollowupidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnfollowupdateChanging(System.Nullable<System.DateTime> value);
    partial void OnfollowupdateChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_Followup()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_followupid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int followupid
		{
			get
			{
				return this._followupid;
			}
			set
			{
				if ((this._followupid != value))
				{
					this.OnfollowupidChanging(value);
					this.SendPropertyChanging();
					this._followupid = value;
					this.SendPropertyChanged("followupid");
					this.OnfollowupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_followupdate", DbType="Date")]
		public System.Nullable<System.DateTime> followupdate
		{
			get
			{
				return this._followupdate;
			}
			set
			{
				if ((this._followupdate != value))
				{
					this.OnfollowupdateChanging(value);
					this.SendPropertyChanging();
					this._followupdate = value;
					this.SendPropertyChanged("followupdate");
					this.OnfollowupdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_Followup", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_Followups.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_Followups.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_Followup", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_Followups.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_Followups.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_hospital")]
	public partial class tbl_hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private string _hname;
		
		private string _htype;
		
		private string _htag;
		
		private string _hlogo1;
		
		private string _hlogo2;
		
		private string _hlogo3;
		
		private string _address1;
		
		private string _address2;
		
		private string _city;
		
		private string _hstate;
		
		private string _country;
		
		private string _contact1;
		
		private string _contact2;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_appointment> _tbl_appointments;
		
		private EntitySet<tbl_billMst> _tbl_billMsts;
		
		private EntitySet<tbl_billParticularMst> _tbl_billParticularMsts;
		
		private EntitySet<tbl_consent> _tbl_consents;
		
		private EntitySet<tbl_discharge> _tbl_discharges;
		
		private EntitySet<tbl_doctorMst> _tbl_doctorMsts;
		
		private EntitySet<tbl_drugcategory> _tbl_drugcategories;
		
		private EntitySet<tbl_drugMst> _tbl_drugMsts;
		
		private EntitySet<tbl_Followup> _tbl_Followups;
		
		private EntitySet<tbl_patientMst> _tbl_patientMsts;
		
		private EntitySet<tbl_role> _tbl_roles;
		
		private EntitySet<tbl_sisterMst> _tbl_sisterMsts;
		
		private EntitySet<tbl_treatment> _tbl_treatments;
		
		private EntitySet<tbl_user> _tbl_users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnhnameChanging(string value);
    partial void OnhnameChanged();
    partial void OnhtypeChanging(string value);
    partial void OnhtypeChanged();
    partial void OnhtagChanging(string value);
    partial void OnhtagChanged();
    partial void Onhlogo1Changing(string value);
    partial void Onhlogo1Changed();
    partial void Onhlogo2Changing(string value);
    partial void Onhlogo2Changed();
    partial void Onhlogo3Changing(string value);
    partial void Onhlogo3Changed();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnhstateChanging(string value);
    partial void OnhstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Oncontact1Changing(string value);
    partial void Oncontact1Changed();
    partial void Oncontact2Changing(string value);
    partial void Oncontact2Changed();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_hospital()
		{
			this._tbl_appointments = new EntitySet<tbl_appointment>(new Action<tbl_appointment>(this.attach_tbl_appointments), new Action<tbl_appointment>(this.detach_tbl_appointments));
			this._tbl_billMsts = new EntitySet<tbl_billMst>(new Action<tbl_billMst>(this.attach_tbl_billMsts), new Action<tbl_billMst>(this.detach_tbl_billMsts));
			this._tbl_billParticularMsts = new EntitySet<tbl_billParticularMst>(new Action<tbl_billParticularMst>(this.attach_tbl_billParticularMsts), new Action<tbl_billParticularMst>(this.detach_tbl_billParticularMsts));
			this._tbl_consents = new EntitySet<tbl_consent>(new Action<tbl_consent>(this.attach_tbl_consents), new Action<tbl_consent>(this.detach_tbl_consents));
			this._tbl_discharges = new EntitySet<tbl_discharge>(new Action<tbl_discharge>(this.attach_tbl_discharges), new Action<tbl_discharge>(this.detach_tbl_discharges));
			this._tbl_doctorMsts = new EntitySet<tbl_doctorMst>(new Action<tbl_doctorMst>(this.attach_tbl_doctorMsts), new Action<tbl_doctorMst>(this.detach_tbl_doctorMsts));
			this._tbl_drugcategories = new EntitySet<tbl_drugcategory>(new Action<tbl_drugcategory>(this.attach_tbl_drugcategories), new Action<tbl_drugcategory>(this.detach_tbl_drugcategories));
			this._tbl_drugMsts = new EntitySet<tbl_drugMst>(new Action<tbl_drugMst>(this.attach_tbl_drugMsts), new Action<tbl_drugMst>(this.detach_tbl_drugMsts));
			this._tbl_Followups = new EntitySet<tbl_Followup>(new Action<tbl_Followup>(this.attach_tbl_Followups), new Action<tbl_Followup>(this.detach_tbl_Followups));
			this._tbl_patientMsts = new EntitySet<tbl_patientMst>(new Action<tbl_patientMst>(this.attach_tbl_patientMsts), new Action<tbl_patientMst>(this.detach_tbl_patientMsts));
			this._tbl_roles = new EntitySet<tbl_role>(new Action<tbl_role>(this.attach_tbl_roles), new Action<tbl_role>(this.detach_tbl_roles));
			this._tbl_sisterMsts = new EntitySet<tbl_sisterMst>(new Action<tbl_sisterMst>(this.attach_tbl_sisterMsts), new Action<tbl_sisterMst>(this.detach_tbl_sisterMsts));
			this._tbl_treatments = new EntitySet<tbl_treatment>(new Action<tbl_treatment>(this.attach_tbl_treatments), new Action<tbl_treatment>(this.detach_tbl_treatments));
			this._tbl_users = new EntitySet<tbl_user>(new Action<tbl_user>(this.attach_tbl_users), new Action<tbl_user>(this.detach_tbl_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hname", DbType="VarChar(50)")]
		public string hname
		{
			get
			{
				return this._hname;
			}
			set
			{
				if ((this._hname != value))
				{
					this.OnhnameChanging(value);
					this.SendPropertyChanging();
					this._hname = value;
					this.SendPropertyChanged("hname");
					this.OnhnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_htype", DbType="VarChar(50)")]
		public string htype
		{
			get
			{
				return this._htype;
			}
			set
			{
				if ((this._htype != value))
				{
					this.OnhtypeChanging(value);
					this.SendPropertyChanging();
					this._htype = value;
					this.SendPropertyChanged("htype");
					this.OnhtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_htag", DbType="VarChar(50)")]
		public string htag
		{
			get
			{
				return this._htag;
			}
			set
			{
				if ((this._htag != value))
				{
					this.OnhtagChanging(value);
					this.SendPropertyChanging();
					this._htag = value;
					this.SendPropertyChanged("htag");
					this.OnhtagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hlogo1", DbType="VarChar(100)")]
		public string hlogo1
		{
			get
			{
				return this._hlogo1;
			}
			set
			{
				if ((this._hlogo1 != value))
				{
					this.Onhlogo1Changing(value);
					this.SendPropertyChanging();
					this._hlogo1 = value;
					this.SendPropertyChanged("hlogo1");
					this.Onhlogo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hlogo2", DbType="VarChar(100)")]
		public string hlogo2
		{
			get
			{
				return this._hlogo2;
			}
			set
			{
				if ((this._hlogo2 != value))
				{
					this.Onhlogo2Changing(value);
					this.SendPropertyChanging();
					this._hlogo2 = value;
					this.SendPropertyChanged("hlogo2");
					this.Onhlogo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hlogo3", DbType="VarChar(100)")]
		public string hlogo3
		{
			get
			{
				return this._hlogo3;
			}
			set
			{
				if ((this._hlogo3 != value))
				{
					this.Onhlogo3Changing(value);
					this.SendPropertyChanging();
					this._hlogo3 = value;
					this.SendPropertyChanged("hlogo3");
					this.Onhlogo3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address1", DbType="VarChar(50)")]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="VarChar(50)")]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hstate", DbType="VarChar(20)")]
		public string hstate
		{
			get
			{
				return this._hstate;
			}
			set
			{
				if ((this._hstate != value))
				{
					this.OnhstateChanging(value);
					this.SendPropertyChanging();
					this._hstate = value;
					this.SendPropertyChanged("hstate");
					this.OnhstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(20)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact1", DbType="VarChar(15)")]
		public string contact1
		{
			get
			{
				return this._contact1;
			}
			set
			{
				if ((this._contact1 != value))
				{
					this.Oncontact1Changing(value);
					this.SendPropertyChanging();
					this._contact1 = value;
					this.SendPropertyChanged("contact1");
					this.Oncontact1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact2", DbType="VarChar(15)")]
		public string contact2
		{
			get
			{
				return this._contact2;
			}
			set
			{
				if ((this._contact2 != value))
				{
					this.Oncontact2Changing(value);
					this.SendPropertyChanging();
					this._contact2 = value;
					this.SendPropertyChanged("contact2");
					this.Oncontact2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_appointment", Storage="_tbl_appointments", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_appointment> tbl_appointments
		{
			get
			{
				return this._tbl_appointments;
			}
			set
			{
				this._tbl_appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_billMst", Storage="_tbl_billMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_billMst> tbl_billMsts
		{
			get
			{
				return this._tbl_billMsts;
			}
			set
			{
				this._tbl_billMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_billParticularMst", Storage="_tbl_billParticularMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_billParticularMst> tbl_billParticularMsts
		{
			get
			{
				return this._tbl_billParticularMsts;
			}
			set
			{
				this._tbl_billParticularMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_consent", Storage="_tbl_consents", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_consent> tbl_consents
		{
			get
			{
				return this._tbl_consents;
			}
			set
			{
				this._tbl_consents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_discharge", Storage="_tbl_discharges", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_discharge> tbl_discharges
		{
			get
			{
				return this._tbl_discharges;
			}
			set
			{
				this._tbl_discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_doctorMst", Storage="_tbl_doctorMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_doctorMst> tbl_doctorMsts
		{
			get
			{
				return this._tbl_doctorMsts;
			}
			set
			{
				this._tbl_doctorMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_drugcategory", Storage="_tbl_drugcategories", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_drugcategory> tbl_drugcategories
		{
			get
			{
				return this._tbl_drugcategories;
			}
			set
			{
				this._tbl_drugcategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_drugMst", Storage="_tbl_drugMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_drugMst> tbl_drugMsts
		{
			get
			{
				return this._tbl_drugMsts;
			}
			set
			{
				this._tbl_drugMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_Followup", Storage="_tbl_Followups", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_Followup> tbl_Followups
		{
			get
			{
				return this._tbl_Followups;
			}
			set
			{
				this._tbl_Followups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_patientMst", Storage="_tbl_patientMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_patientMst> tbl_patientMsts
		{
			get
			{
				return this._tbl_patientMsts;
			}
			set
			{
				this._tbl_patientMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_role", Storage="_tbl_roles", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_role> tbl_roles
		{
			get
			{
				return this._tbl_roles;
			}
			set
			{
				this._tbl_roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_sisterMst", Storage="_tbl_sisterMsts", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_sisterMst> tbl_sisterMsts
		{
			get
			{
				return this._tbl_sisterMsts;
			}
			set
			{
				this._tbl_sisterMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_treatment", Storage="_tbl_treatments", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_treatment> tbl_treatments
		{
			get
			{
				return this._tbl_treatments;
			}
			set
			{
				this._tbl_treatments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_user", Storage="_tbl_users", ThisKey="hid", OtherKey="hid")]
		public EntitySet<tbl_user> tbl_users
		{
			get
			{
				return this._tbl_users;
			}
			set
			{
				this._tbl_users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_appointments(tbl_appointment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_appointments(tbl_appointment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_billMsts(tbl_billMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_billMsts(tbl_billMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_billParticularMsts(tbl_billParticularMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_billParticularMsts(tbl_billParticularMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_consents(tbl_consent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_consents(tbl_consent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_discharges(tbl_discharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_discharges(tbl_discharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_doctorMsts(tbl_doctorMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_doctorMsts(tbl_doctorMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_drugcategories(tbl_drugcategory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_drugcategories(tbl_drugcategory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_drugMsts(tbl_drugMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_drugMsts(tbl_drugMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_Followups(tbl_Followup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_Followups(tbl_Followup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_patientMsts(tbl_patientMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_patientMsts(tbl_patientMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_roles(tbl_role entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_roles(tbl_role entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_sisterMsts(tbl_sisterMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_sisterMsts(tbl_sisterMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_treatments(tbl_treatment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_treatments(tbl_treatment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
		
		private void attach_tbl_users(tbl_user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = this;
		}
		
		private void detach_tbl_users(tbl_user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_patientContact")]
	public partial class tbl_patientContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientid;
		
		private int _addressid;
		
		private string _taddress;
		
		private string _tcity;
		
		private string _tcountry;
		
		private string _tstate;
		
		private string _tdistrict;
		
		private string _tpin;
		
		private string _paddress;
		
		private string _pcity;
		
		private string _pcountry;
		
		private string _pstate;
		
		private string _pdistrict;
		
		private string _ppin;
		
		private string _pmobile;
		
		private string _amobile;
		
		private string _phone;
		
		private string _pemail;
		
		private string _aemail;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnaddressidChanging(int value);
    partial void OnaddressidChanged();
    partial void OntaddressChanging(string value);
    partial void OntaddressChanged();
    partial void OntcityChanging(string value);
    partial void OntcityChanged();
    partial void OntcountryChanging(string value);
    partial void OntcountryChanged();
    partial void OntstateChanging(string value);
    partial void OntstateChanged();
    partial void OntdistrictChanging(string value);
    partial void OntdistrictChanged();
    partial void OntpinChanging(string value);
    partial void OntpinChanged();
    partial void OnpaddressChanging(string value);
    partial void OnpaddressChanged();
    partial void OnpcityChanging(string value);
    partial void OnpcityChanged();
    partial void OnpcountryChanging(string value);
    partial void OnpcountryChanged();
    partial void OnpstateChanging(string value);
    partial void OnpstateChanged();
    partial void OnpdistrictChanging(string value);
    partial void OnpdistrictChanged();
    partial void OnppinChanging(string value);
    partial void OnppinChanged();
    partial void OnpmobileChanging(string value);
    partial void OnpmobileChanged();
    partial void OnamobileChanging(string value);
    partial void OnamobileChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpemailChanging(string value);
    partial void OnpemailChanged();
    partial void OnaemailChanging(string value);
    partial void OnaemailChanged();
    #endregion
		
		public tbl_patientContact()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int addressid
		{
			get
			{
				return this._addressid;
			}
			set
			{
				if ((this._addressid != value))
				{
					this.OnaddressidChanging(value);
					this.SendPropertyChanging();
					this._addressid = value;
					this.SendPropertyChanged("addressid");
					this.OnaddressidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taddress", DbType="VarChar(255)")]
		public string taddress
		{
			get
			{
				return this._taddress;
			}
			set
			{
				if ((this._taddress != value))
				{
					this.OntaddressChanging(value);
					this.SendPropertyChanging();
					this._taddress = value;
					this.SendPropertyChanged("taddress");
					this.OntaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcity", DbType="VarChar(20)")]
		public string tcity
		{
			get
			{
				return this._tcity;
			}
			set
			{
				if ((this._tcity != value))
				{
					this.OntcityChanging(value);
					this.SendPropertyChanging();
					this._tcity = value;
					this.SendPropertyChanged("tcity");
					this.OntcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcountry", DbType="VarChar(20)")]
		public string tcountry
		{
			get
			{
				return this._tcountry;
			}
			set
			{
				if ((this._tcountry != value))
				{
					this.OntcountryChanging(value);
					this.SendPropertyChanging();
					this._tcountry = value;
					this.SendPropertyChanged("tcountry");
					this.OntcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstate", DbType="VarChar(20)")]
		public string tstate
		{
			get
			{
				return this._tstate;
			}
			set
			{
				if ((this._tstate != value))
				{
					this.OntstateChanging(value);
					this.SendPropertyChanging();
					this._tstate = value;
					this.SendPropertyChanged("tstate");
					this.OntstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tdistrict", DbType="VarChar(20)")]
		public string tdistrict
		{
			get
			{
				return this._tdistrict;
			}
			set
			{
				if ((this._tdistrict != value))
				{
					this.OntdistrictChanging(value);
					this.SendPropertyChanging();
					this._tdistrict = value;
					this.SendPropertyChanged("tdistrict");
					this.OntdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpin", DbType="VarChar(6)")]
		public string tpin
		{
			get
			{
				return this._tpin;
			}
			set
			{
				if ((this._tpin != value))
				{
					this.OntpinChanging(value);
					this.SendPropertyChanging();
					this._tpin = value;
					this.SendPropertyChanged("tpin");
					this.OntpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paddress", DbType="VarChar(255)")]
		public string paddress
		{
			get
			{
				return this._paddress;
			}
			set
			{
				if ((this._paddress != value))
				{
					this.OnpaddressChanging(value);
					this.SendPropertyChanging();
					this._paddress = value;
					this.SendPropertyChanged("paddress");
					this.OnpaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcity", DbType="VarChar(20)")]
		public string pcity
		{
			get
			{
				return this._pcity;
			}
			set
			{
				if ((this._pcity != value))
				{
					this.OnpcityChanging(value);
					this.SendPropertyChanging();
					this._pcity = value;
					this.SendPropertyChanged("pcity");
					this.OnpcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcountry", DbType="VarChar(20)")]
		public string pcountry
		{
			get
			{
				return this._pcountry;
			}
			set
			{
				if ((this._pcountry != value))
				{
					this.OnpcountryChanging(value);
					this.SendPropertyChanging();
					this._pcountry = value;
					this.SendPropertyChanged("pcountry");
					this.OnpcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pstate", DbType="VarChar(20)")]
		public string pstate
		{
			get
			{
				return this._pstate;
			}
			set
			{
				if ((this._pstate != value))
				{
					this.OnpstateChanging(value);
					this.SendPropertyChanging();
					this._pstate = value;
					this.SendPropertyChanged("pstate");
					this.OnpstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdistrict", DbType="VarChar(20)")]
		public string pdistrict
		{
			get
			{
				return this._pdistrict;
			}
			set
			{
				if ((this._pdistrict != value))
				{
					this.OnpdistrictChanging(value);
					this.SendPropertyChanging();
					this._pdistrict = value;
					this.SendPropertyChanged("pdistrict");
					this.OnpdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ppin", DbType="VarChar(6)")]
		public string ppin
		{
			get
			{
				return this._ppin;
			}
			set
			{
				if ((this._ppin != value))
				{
					this.OnppinChanging(value);
					this.SendPropertyChanging();
					this._ppin = value;
					this.SendPropertyChanged("ppin");
					this.OnppinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pmobile", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string pmobile
		{
			get
			{
				return this._pmobile;
			}
			set
			{
				if ((this._pmobile != value))
				{
					this.OnpmobileChanging(value);
					this.SendPropertyChanging();
					this._pmobile = value;
					this.SendPropertyChanged("pmobile");
					this.OnpmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amobile", DbType="VarChar(10)")]
		public string amobile
		{
			get
			{
				return this._amobile;
			}
			set
			{
				if ((this._amobile != value))
				{
					this.OnamobileChanging(value);
					this.SendPropertyChanging();
					this._amobile = value;
					this.SendPropertyChanged("amobile");
					this.OnamobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pemail", DbType="VarChar(25)")]
		public string pemail
		{
			get
			{
				return this._pemail;
			}
			set
			{
				if ((this._pemail != value))
				{
					this.OnpemailChanging(value);
					this.SendPropertyChanging();
					this._pemail = value;
					this.SendPropertyChanged("pemail");
					this.OnpemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aemail", DbType="VarChar(25)")]
		public string aemail
		{
			get
			{
				return this._aemail;
			}
			set
			{
				if ((this._aemail != value))
				{
					this.OnaemailChanging(value);
					this.SendPropertyChanging();
					this._aemail = value;
					this.SendPropertyChanged("aemail");
					this.OnaemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientContact", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_patientContacts.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_patientContacts.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_patientIdentity")]
	public partial class tbl_patientIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientid;
		
		private int _patientidentityid;
		
		private string _aadharid;
		
		private string _passportid;
		
		private string _panid;
		
		private string _voterid;
		
		private string _empoyeeid;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnpatientidentityidChanging(int value);
    partial void OnpatientidentityidChanged();
    partial void OnaadharidChanging(string value);
    partial void OnaadharidChanged();
    partial void OnpassportidChanging(string value);
    partial void OnpassportidChanged();
    partial void OnpanidChanging(string value);
    partial void OnpanidChanged();
    partial void OnvoteridChanging(string value);
    partial void OnvoteridChanged();
    partial void OnempoyeeidChanging(string value);
    partial void OnempoyeeidChanged();
    #endregion
		
		public tbl_patientIdentity()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientidentityid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientidentityid
		{
			get
			{
				return this._patientidentityid;
			}
			set
			{
				if ((this._patientidentityid != value))
				{
					this.OnpatientidentityidChanging(value);
					this.SendPropertyChanging();
					this._patientidentityid = value;
					this.SendPropertyChanged("patientidentityid");
					this.OnpatientidentityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aadharid", DbType="VarChar(20)")]
		public string aadharid
		{
			get
			{
				return this._aadharid;
			}
			set
			{
				if ((this._aadharid != value))
				{
					this.OnaadharidChanging(value);
					this.SendPropertyChanging();
					this._aadharid = value;
					this.SendPropertyChanged("aadharid");
					this.OnaadharidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passportid", DbType="VarChar(15)")]
		public string passportid
		{
			get
			{
				return this._passportid;
			}
			set
			{
				if ((this._passportid != value))
				{
					this.OnpassportidChanging(value);
					this.SendPropertyChanging();
					this._passportid = value;
					this.SendPropertyChanged("passportid");
					this.OnpassportidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_panid", DbType="VarChar(10)")]
		public string panid
		{
			get
			{
				return this._panid;
			}
			set
			{
				if ((this._panid != value))
				{
					this.OnpanidChanging(value);
					this.SendPropertyChanging();
					this._panid = value;
					this.SendPropertyChanged("panid");
					this.OnpanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voterid", DbType="VarChar(15)")]
		public string voterid
		{
			get
			{
				return this._voterid;
			}
			set
			{
				if ((this._voterid != value))
				{
					this.OnvoteridChanging(value);
					this.SendPropertyChanging();
					this._voterid = value;
					this.SendPropertyChanged("voterid");
					this.OnvoteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empoyeeid", DbType="VarChar(15)")]
		public string empoyeeid
		{
			get
			{
				return this._empoyeeid;
			}
			set
			{
				if ((this._empoyeeid != value))
				{
					this.OnempoyeeidChanging(value);
					this.SendPropertyChanging();
					this._empoyeeid = value;
					this.SendPropertyChanged("empoyeeid");
					this.OnempoyeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientIdentity", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_patientIdentities.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_patientIdentities.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_patientInsuranceMst")]
	public partial class tbl_patientInsuranceMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientid;
		
		private int _srno;
		
		private string _insuranceid;
		
		private string _icompanyname;
		
		private string _employeeid;
		
		private string _ecompanyname;
		
		private string _ecompanyaddress;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnsrnoChanging(int value);
    partial void OnsrnoChanged();
    partial void OninsuranceidChanging(string value);
    partial void OninsuranceidChanged();
    partial void OnicompanynameChanging(string value);
    partial void OnicompanynameChanged();
    partial void OnemployeeidChanging(string value);
    partial void OnemployeeidChanged();
    partial void OnecompanynameChanging(string value);
    partial void OnecompanynameChanged();
    partial void OnecompanyaddressChanging(string value);
    partial void OnecompanyaddressChanged();
    #endregion
		
		public tbl_patientInsuranceMst()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int srno
		{
			get
			{
				return this._srno;
			}
			set
			{
				if ((this._srno != value))
				{
					this.OnsrnoChanging(value);
					this.SendPropertyChanging();
					this._srno = value;
					this.SendPropertyChanged("srno");
					this.OnsrnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insuranceid", DbType="VarChar(20)")]
		public string insuranceid
		{
			get
			{
				return this._insuranceid;
			}
			set
			{
				if ((this._insuranceid != value))
				{
					this.OninsuranceidChanging(value);
					this.SendPropertyChanging();
					this._insuranceid = value;
					this.SendPropertyChanged("insuranceid");
					this.OninsuranceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icompanyname", DbType="VarChar(50)")]
		public string icompanyname
		{
			get
			{
				return this._icompanyname;
			}
			set
			{
				if ((this._icompanyname != value))
				{
					this.OnicompanynameChanging(value);
					this.SendPropertyChanging();
					this._icompanyname = value;
					this.SendPropertyChanged("icompanyname");
					this.OnicompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeid", DbType="VarChar(20)")]
		public string employeeid
		{
			get
			{
				return this._employeeid;
			}
			set
			{
				if ((this._employeeid != value))
				{
					this.OnemployeeidChanging(value);
					this.SendPropertyChanging();
					this._employeeid = value;
					this.SendPropertyChanged("employeeid");
					this.OnemployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ecompanyname", DbType="VarChar(50)")]
		public string ecompanyname
		{
			get
			{
				return this._ecompanyname;
			}
			set
			{
				if ((this._ecompanyname != value))
				{
					this.OnecompanynameChanging(value);
					this.SendPropertyChanging();
					this._ecompanyname = value;
					this.SendPropertyChanged("ecompanyname");
					this.OnecompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ecompanyaddress", DbType="VarChar(50)")]
		public string ecompanyaddress
		{
			get
			{
				return this._ecompanyaddress;
			}
			set
			{
				if ((this._ecompanyaddress != value))
				{
					this.OnecompanyaddressChanging(value);
					this.SendPropertyChanging();
					this._ecompanyaddress = value;
					this.SendPropertyChanged("ecompanyaddress");
					this.OnecompanyaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientInsuranceMst", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_patientInsuranceMsts.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_patientInsuranceMsts.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_patientMst")]
	public partial class tbl_patientMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _patientid;
		
		private System.Nullable<System.DateTime> _reg_dt;
		
		private string _fname;
		
		private string _mname;
		
		private string _lname;
		
		private string _contact;
		
		private System.Nullable<System.DateTime> _dob;
		
		private string _birthplace;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<char> _gender;
		
		private System.Nullable<char> _maritalstatus;
		
		private string _bloodgroup;
		
		private System.Nullable<decimal> _pheight;
		
		private System.Nullable<decimal> _pweight;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<billParticular> _billParticulars;
		
		private EntitySet<tbl_billMst> _tbl_billMsts;
		
		private EntitySet<tbl_consent> _tbl_consents;
		
		private EntitySet<tbl_discharge> _tbl_discharges;
		
		private EntitySet<tbl_Followup> _tbl_Followups;
		
		private EntitySet<tbl_patientContact> _tbl_patientContacts;
		
		private EntitySet<tbl_patientIdentity> _tbl_patientIdentities;
		
		private EntitySet<tbl_patientInsuranceMst> _tbl_patientInsuranceMsts;
		
		private EntitySet<tbl_treatdisease> _tbl_treatdiseases;
		
		private EntitySet<tbl_treatinvestigation> _tbl_treatinvestigations;
		
		private EntitySet<tbl_treatmedicine> _tbl_treatmedicines;
		
		private EntitySet<tbl_treatment> _tbl_treatments;
		
		private EntitySet<tbl_treatVision> _tbl_treatVisions;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void Onreg_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreg_dtChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void OnbirthplaceChanging(string value);
    partial void OnbirthplaceChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OngenderChanging(System.Nullable<char> value);
    partial void OngenderChanged();
    partial void OnmaritalstatusChanging(System.Nullable<char> value);
    partial void OnmaritalstatusChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OnpheightChanging(System.Nullable<decimal> value);
    partial void OnpheightChanged();
    partial void OnpweightChanging(System.Nullable<decimal> value);
    partial void OnpweightChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_patientMst()
		{
			this._billParticulars = new EntitySet<billParticular>(new Action<billParticular>(this.attach_billParticulars), new Action<billParticular>(this.detach_billParticulars));
			this._tbl_billMsts = new EntitySet<tbl_billMst>(new Action<tbl_billMst>(this.attach_tbl_billMsts), new Action<tbl_billMst>(this.detach_tbl_billMsts));
			this._tbl_consents = new EntitySet<tbl_consent>(new Action<tbl_consent>(this.attach_tbl_consents), new Action<tbl_consent>(this.detach_tbl_consents));
			this._tbl_discharges = new EntitySet<tbl_discharge>(new Action<tbl_discharge>(this.attach_tbl_discharges), new Action<tbl_discharge>(this.detach_tbl_discharges));
			this._tbl_Followups = new EntitySet<tbl_Followup>(new Action<tbl_Followup>(this.attach_tbl_Followups), new Action<tbl_Followup>(this.detach_tbl_Followups));
			this._tbl_patientContacts = new EntitySet<tbl_patientContact>(new Action<tbl_patientContact>(this.attach_tbl_patientContacts), new Action<tbl_patientContact>(this.detach_tbl_patientContacts));
			this._tbl_patientIdentities = new EntitySet<tbl_patientIdentity>(new Action<tbl_patientIdentity>(this.attach_tbl_patientIdentities), new Action<tbl_patientIdentity>(this.detach_tbl_patientIdentities));
			this._tbl_patientInsuranceMsts = new EntitySet<tbl_patientInsuranceMst>(new Action<tbl_patientInsuranceMst>(this.attach_tbl_patientInsuranceMsts), new Action<tbl_patientInsuranceMst>(this.detach_tbl_patientInsuranceMsts));
			this._tbl_treatdiseases = new EntitySet<tbl_treatdisease>(new Action<tbl_treatdisease>(this.attach_tbl_treatdiseases), new Action<tbl_treatdisease>(this.detach_tbl_treatdiseases));
			this._tbl_treatinvestigations = new EntitySet<tbl_treatinvestigation>(new Action<tbl_treatinvestigation>(this.attach_tbl_treatinvestigations), new Action<tbl_treatinvestigation>(this.detach_tbl_treatinvestigations));
			this._tbl_treatmedicines = new EntitySet<tbl_treatmedicine>(new Action<tbl_treatmedicine>(this.attach_tbl_treatmedicines), new Action<tbl_treatmedicine>(this.detach_tbl_treatmedicines));
			this._tbl_treatments = new EntitySet<tbl_treatment>(new Action<tbl_treatment>(this.attach_tbl_treatments), new Action<tbl_treatment>(this.detach_tbl_treatments));
			this._tbl_treatVisions = new EntitySet<tbl_treatVision>(new Action<tbl_treatVision>(this.attach_tbl_treatVisions), new Action<tbl_treatVision>(this.detach_tbl_treatVisions));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> reg_dt
		{
			get
			{
				return this._reg_dt;
			}
			set
			{
				if ((this._reg_dt != value))
				{
					this.Onreg_dtChanging(value);
					this.SendPropertyChanging();
					this._reg_dt = value;
					this.SendPropertyChanged("reg_dt");
					this.Onreg_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(10)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(10)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(10)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(10)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthplace", DbType="VarChar(15)")]
		public string birthplace
		{
			get
			{
				return this._birthplace;
			}
			set
			{
				if ((this._birthplace != value))
				{
					this.OnbirthplaceChanging(value);
					this.SendPropertyChanging();
					this._birthplace = value;
					this.SendPropertyChanged("birthplace");
					this.OnbirthplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1)")]
		public System.Nullable<char> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="Char(1)")]
		public System.Nullable<char> maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(3)")]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pheight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> pheight
		{
			get
			{
				return this._pheight;
			}
			set
			{
				if ((this._pheight != value))
				{
					this.OnpheightChanging(value);
					this.SendPropertyChanging();
					this._pheight = value;
					this.SendPropertyChanged("pheight");
					this.OnpheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pweight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> pweight
		{
			get
			{
				return this._pweight;
			}
			set
			{
				if ((this._pweight != value))
				{
					this.OnpweightChanging(value);
					this.SendPropertyChanging();
					this._pweight = value;
					this.SendPropertyChanged("pweight");
					this.OnpweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_billParticular", Storage="_billParticulars", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<billParticular> billParticulars
		{
			get
			{
				return this._billParticulars;
			}
			set
			{
				this._billParticulars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_billMst", Storage="_tbl_billMsts", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_billMst> tbl_billMsts
		{
			get
			{
				return this._tbl_billMsts;
			}
			set
			{
				this._tbl_billMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_consent", Storage="_tbl_consents", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_consent> tbl_consents
		{
			get
			{
				return this._tbl_consents;
			}
			set
			{
				this._tbl_consents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_discharge", Storage="_tbl_discharges", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_discharge> tbl_discharges
		{
			get
			{
				return this._tbl_discharges;
			}
			set
			{
				this._tbl_discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_Followup", Storage="_tbl_Followups", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_Followup> tbl_Followups
		{
			get
			{
				return this._tbl_Followups;
			}
			set
			{
				this._tbl_Followups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientContact", Storage="_tbl_patientContacts", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_patientContact> tbl_patientContacts
		{
			get
			{
				return this._tbl_patientContacts;
			}
			set
			{
				this._tbl_patientContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientIdentity", Storage="_tbl_patientIdentities", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_patientIdentity> tbl_patientIdentities
		{
			get
			{
				return this._tbl_patientIdentities;
			}
			set
			{
				this._tbl_patientIdentities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_patientInsuranceMst", Storage="_tbl_patientInsuranceMsts", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_patientInsuranceMst> tbl_patientInsuranceMsts
		{
			get
			{
				return this._tbl_patientInsuranceMsts;
			}
			set
			{
				this._tbl_patientInsuranceMsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatdisease", Storage="_tbl_treatdiseases", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_treatdisease> tbl_treatdiseases
		{
			get
			{
				return this._tbl_treatdiseases;
			}
			set
			{
				this._tbl_treatdiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatinvestigation", Storage="_tbl_treatinvestigations", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_treatinvestigation> tbl_treatinvestigations
		{
			get
			{
				return this._tbl_treatinvestigations;
			}
			set
			{
				this._tbl_treatinvestigations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatmedicine", Storage="_tbl_treatmedicines", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_treatmedicine> tbl_treatmedicines
		{
			get
			{
				return this._tbl_treatmedicines;
			}
			set
			{
				this._tbl_treatmedicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatment", Storage="_tbl_treatments", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_treatment> tbl_treatments
		{
			get
			{
				return this._tbl_treatments;
			}
			set
			{
				this._tbl_treatments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatVision", Storage="_tbl_treatVisions", ThisKey="patientid", OtherKey="patientid")]
		public EntitySet<tbl_treatVision> tbl_treatVisions
		{
			get
			{
				return this._tbl_treatVisions;
			}
			set
			{
				this._tbl_treatVisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_patientMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_patientMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_patientMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billParticulars(billParticular entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_billParticulars(billParticular entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_billMsts(tbl_billMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_billMsts(tbl_billMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_consents(tbl_consent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_consents(tbl_consent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_discharges(tbl_discharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_discharges(tbl_discharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_Followups(tbl_Followup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_Followups(tbl_Followup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_patientContacts(tbl_patientContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_patientContacts(tbl_patientContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_patientIdentities(tbl_patientIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_patientIdentities(tbl_patientIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_patientInsuranceMsts(tbl_patientInsuranceMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_patientInsuranceMsts(tbl_patientInsuranceMst entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_treatdiseases(tbl_treatdisease entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_treatdiseases(tbl_treatdisease entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_treatinvestigations(tbl_treatinvestigation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_treatinvestigations(tbl_treatinvestigation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_treatmedicines(tbl_treatmedicine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_treatmedicines(tbl_treatmedicine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_treatments(tbl_treatment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_treatments(tbl_treatment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
		
		private void attach_tbl_treatVisions(tbl_treatVision entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = this;
		}
		
		private void detach_tbl_treatVisions(tbl_treatVision entity)
		{
			this.SendPropertyChanging();
			entity.tbl_patientMst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_role")]
	public partial class tbl_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _roleid;
		
		private string _rolename;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_user> _tbl_users;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OnroleidChanging(int value);
    partial void OnroleidChanged();
    partial void OnrolenameChanging(string value);
    partial void OnrolenameChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_role()
		{
			this._tbl_users = new EntitySet<tbl_user>(new Action<tbl_user>(this.attach_tbl_users), new Action<tbl_user>(this.detach_tbl_users));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if ((this._roleid != value))
				{
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rolename", DbType="VarChar(10)")]
		public string rolename
		{
			get
			{
				return this._rolename;
			}
			set
			{
				if ((this._rolename != value))
				{
					this.OnrolenameChanging(value);
					this.SendPropertyChanging();
					this._rolename = value;
					this.SendPropertyChanged("rolename");
					this.OnrolenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_role_tbl_user", Storage="_tbl_users", ThisKey="roleid", OtherKey="roleid")]
		public EntitySet<tbl_user> tbl_users
		{
			get
			{
				return this._tbl_users;
			}
			set
			{
				this._tbl_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_role", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_roles.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_roles.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_users(tbl_user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_role = this;
		}
		
		private void detach_tbl_users(tbl_user entity)
		{
			this.SendPropertyChanging();
			entity.tbl_role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_sisterContact")]
	public partial class tbl_sisterContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sisterid;
		
		private int _addressid;
		
		private string _taddress;
		
		private string _tcity;
		
		private string _tcountry;
		
		private string _tstate;
		
		private string _tdistrict;
		
		private string _tpin;
		
		private string _paddress;
		
		private string _pcity;
		
		private string _pcountry;
		
		private string _pstate;
		
		private string _pdistrict;
		
		private string _ppin;
		
		private string _pmobile;
		
		private string _amobile;
		
		private string _phone;
		
		private string _pemail;
		
		private string _aemail;
		
		private EntityRef<tbl_sisterMst> _tbl_sisterMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsisteridChanging(int value);
    partial void OnsisteridChanged();
    partial void OnaddressidChanging(int value);
    partial void OnaddressidChanged();
    partial void OntaddressChanging(string value);
    partial void OntaddressChanged();
    partial void OntcityChanging(string value);
    partial void OntcityChanged();
    partial void OntcountryChanging(string value);
    partial void OntcountryChanged();
    partial void OntstateChanging(string value);
    partial void OntstateChanged();
    partial void OntdistrictChanging(string value);
    partial void OntdistrictChanged();
    partial void OntpinChanging(string value);
    partial void OntpinChanged();
    partial void OnpaddressChanging(string value);
    partial void OnpaddressChanged();
    partial void OnpcityChanging(string value);
    partial void OnpcityChanged();
    partial void OnpcountryChanging(string value);
    partial void OnpcountryChanged();
    partial void OnpstateChanging(string value);
    partial void OnpstateChanged();
    partial void OnpdistrictChanging(string value);
    partial void OnpdistrictChanged();
    partial void OnppinChanging(string value);
    partial void OnppinChanged();
    partial void OnpmobileChanging(string value);
    partial void OnpmobileChanged();
    partial void OnamobileChanging(string value);
    partial void OnamobileChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpemailChanging(string value);
    partial void OnpemailChanged();
    partial void OnaemailChanging(string value);
    partial void OnaemailChanged();
    #endregion
		
		public tbl_sisterContact()
		{
			this._tbl_sisterMst = default(EntityRef<tbl_sisterMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisterid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sisterid
		{
			get
			{
				return this._sisterid;
			}
			set
			{
				if ((this._sisterid != value))
				{
					if (this._tbl_sisterMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsisteridChanging(value);
					this.SendPropertyChanging();
					this._sisterid = value;
					this.SendPropertyChanged("sisterid");
					this.OnsisteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int addressid
		{
			get
			{
				return this._addressid;
			}
			set
			{
				if ((this._addressid != value))
				{
					this.OnaddressidChanging(value);
					this.SendPropertyChanging();
					this._addressid = value;
					this.SendPropertyChanged("addressid");
					this.OnaddressidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taddress", DbType="VarChar(255)")]
		public string taddress
		{
			get
			{
				return this._taddress;
			}
			set
			{
				if ((this._taddress != value))
				{
					this.OntaddressChanging(value);
					this.SendPropertyChanging();
					this._taddress = value;
					this.SendPropertyChanged("taddress");
					this.OntaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcity", DbType="VarChar(20)")]
		public string tcity
		{
			get
			{
				return this._tcity;
			}
			set
			{
				if ((this._tcity != value))
				{
					this.OntcityChanging(value);
					this.SendPropertyChanging();
					this._tcity = value;
					this.SendPropertyChanged("tcity");
					this.OntcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcountry", DbType="VarChar(20)")]
		public string tcountry
		{
			get
			{
				return this._tcountry;
			}
			set
			{
				if ((this._tcountry != value))
				{
					this.OntcountryChanging(value);
					this.SendPropertyChanging();
					this._tcountry = value;
					this.SendPropertyChanged("tcountry");
					this.OntcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tstate", DbType="VarChar(20)")]
		public string tstate
		{
			get
			{
				return this._tstate;
			}
			set
			{
				if ((this._tstate != value))
				{
					this.OntstateChanging(value);
					this.SendPropertyChanging();
					this._tstate = value;
					this.SendPropertyChanged("tstate");
					this.OntstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tdistrict", DbType="VarChar(20)")]
		public string tdistrict
		{
			get
			{
				return this._tdistrict;
			}
			set
			{
				if ((this._tdistrict != value))
				{
					this.OntdistrictChanging(value);
					this.SendPropertyChanging();
					this._tdistrict = value;
					this.SendPropertyChanged("tdistrict");
					this.OntdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpin", DbType="VarChar(6)")]
		public string tpin
		{
			get
			{
				return this._tpin;
			}
			set
			{
				if ((this._tpin != value))
				{
					this.OntpinChanging(value);
					this.SendPropertyChanging();
					this._tpin = value;
					this.SendPropertyChanged("tpin");
					this.OntpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paddress", DbType="VarChar(255)")]
		public string paddress
		{
			get
			{
				return this._paddress;
			}
			set
			{
				if ((this._paddress != value))
				{
					this.OnpaddressChanging(value);
					this.SendPropertyChanging();
					this._paddress = value;
					this.SendPropertyChanged("paddress");
					this.OnpaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcity", DbType="VarChar(20)")]
		public string pcity
		{
			get
			{
				return this._pcity;
			}
			set
			{
				if ((this._pcity != value))
				{
					this.OnpcityChanging(value);
					this.SendPropertyChanging();
					this._pcity = value;
					this.SendPropertyChanged("pcity");
					this.OnpcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pcountry", DbType="VarChar(20)")]
		public string pcountry
		{
			get
			{
				return this._pcountry;
			}
			set
			{
				if ((this._pcountry != value))
				{
					this.OnpcountryChanging(value);
					this.SendPropertyChanging();
					this._pcountry = value;
					this.SendPropertyChanged("pcountry");
					this.OnpcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pstate", DbType="VarChar(20)")]
		public string pstate
		{
			get
			{
				return this._pstate;
			}
			set
			{
				if ((this._pstate != value))
				{
					this.OnpstateChanging(value);
					this.SendPropertyChanging();
					this._pstate = value;
					this.SendPropertyChanged("pstate");
					this.OnpstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdistrict", DbType="VarChar(20)")]
		public string pdistrict
		{
			get
			{
				return this._pdistrict;
			}
			set
			{
				if ((this._pdistrict != value))
				{
					this.OnpdistrictChanging(value);
					this.SendPropertyChanging();
					this._pdistrict = value;
					this.SendPropertyChanged("pdistrict");
					this.OnpdistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ppin", DbType="VarChar(6)")]
		public string ppin
		{
			get
			{
				return this._ppin;
			}
			set
			{
				if ((this._ppin != value))
				{
					this.OnppinChanging(value);
					this.SendPropertyChanging();
					this._ppin = value;
					this.SendPropertyChanged("ppin");
					this.OnppinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pmobile", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string pmobile
		{
			get
			{
				return this._pmobile;
			}
			set
			{
				if ((this._pmobile != value))
				{
					this.OnpmobileChanging(value);
					this.SendPropertyChanging();
					this._pmobile = value;
					this.SendPropertyChanged("pmobile");
					this.OnpmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amobile", DbType="VarChar(10)")]
		public string amobile
		{
			get
			{
				return this._amobile;
			}
			set
			{
				if ((this._amobile != value))
				{
					this.OnamobileChanging(value);
					this.SendPropertyChanging();
					this._amobile = value;
					this.SendPropertyChanged("amobile");
					this.OnamobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pemail", DbType="VarChar(25)")]
		public string pemail
		{
			get
			{
				return this._pemail;
			}
			set
			{
				if ((this._pemail != value))
				{
					this.OnpemailChanging(value);
					this.SendPropertyChanging();
					this._pemail = value;
					this.SendPropertyChanged("pemail");
					this.OnpemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aemail", DbType="VarChar(25)")]
		public string aemail
		{
			get
			{
				return this._aemail;
			}
			set
			{
				if ((this._aemail != value))
				{
					this.OnaemailChanging(value);
					this.SendPropertyChanging();
					this._aemail = value;
					this.SendPropertyChanged("aemail");
					this.OnaemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sisterMst_tbl_sisterContact", Storage="_tbl_sisterMst", ThisKey="sisterid", OtherKey="sisterid", IsForeignKey=true)]
		public tbl_sisterMst tbl_sisterMst
		{
			get
			{
				return this._tbl_sisterMst.Entity;
			}
			set
			{
				tbl_sisterMst previousValue = this._tbl_sisterMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_sisterMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_sisterMst.Entity = null;
						previousValue.tbl_sisterContacts.Remove(this);
					}
					this._tbl_sisterMst.Entity = value;
					if ((value != null))
					{
						value.tbl_sisterContacts.Add(this);
						this._sisterid = value.sisterid;
					}
					else
					{
						this._sisterid = default(int);
					}
					this.SendPropertyChanged("tbl_sisterMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_sisterIdentity")]
	public partial class tbl_sisterIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sisterid;
		
		private int _sisteridentityid;
		
		private string _aadharid;
		
		private string _passportid;
		
		private string _panid;
		
		private string _voterid;
		
		private string _empoyeeid;
		
		private EntityRef<tbl_sisterMst> _tbl_sisterMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsisteridChanging(int value);
    partial void OnsisteridChanged();
    partial void OnsisteridentityidChanging(int value);
    partial void OnsisteridentityidChanged();
    partial void OnaadharidChanging(string value);
    partial void OnaadharidChanged();
    partial void OnpassportidChanging(string value);
    partial void OnpassportidChanged();
    partial void OnpanidChanging(string value);
    partial void OnpanidChanged();
    partial void OnvoteridChanging(string value);
    partial void OnvoteridChanged();
    partial void OnempoyeeidChanging(string value);
    partial void OnempoyeeidChanged();
    #endregion
		
		public tbl_sisterIdentity()
		{
			this._tbl_sisterMst = default(EntityRef<tbl_sisterMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisterid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sisterid
		{
			get
			{
				return this._sisterid;
			}
			set
			{
				if ((this._sisterid != value))
				{
					if (this._tbl_sisterMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsisteridChanging(value);
					this.SendPropertyChanging();
					this._sisterid = value;
					this.SendPropertyChanged("sisterid");
					this.OnsisteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisteridentityid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sisteridentityid
		{
			get
			{
				return this._sisteridentityid;
			}
			set
			{
				if ((this._sisteridentityid != value))
				{
					this.OnsisteridentityidChanging(value);
					this.SendPropertyChanging();
					this._sisteridentityid = value;
					this.SendPropertyChanged("sisteridentityid");
					this.OnsisteridentityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aadharid", DbType="VarChar(20)")]
		public string aadharid
		{
			get
			{
				return this._aadharid;
			}
			set
			{
				if ((this._aadharid != value))
				{
					this.OnaadharidChanging(value);
					this.SendPropertyChanging();
					this._aadharid = value;
					this.SendPropertyChanged("aadharid");
					this.OnaadharidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passportid", DbType="VarChar(15)")]
		public string passportid
		{
			get
			{
				return this._passportid;
			}
			set
			{
				if ((this._passportid != value))
				{
					this.OnpassportidChanging(value);
					this.SendPropertyChanging();
					this._passportid = value;
					this.SendPropertyChanged("passportid");
					this.OnpassportidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_panid", DbType="VarChar(10)")]
		public string panid
		{
			get
			{
				return this._panid;
			}
			set
			{
				if ((this._panid != value))
				{
					this.OnpanidChanging(value);
					this.SendPropertyChanging();
					this._panid = value;
					this.SendPropertyChanged("panid");
					this.OnpanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voterid", DbType="VarChar(15)")]
		public string voterid
		{
			get
			{
				return this._voterid;
			}
			set
			{
				if ((this._voterid != value))
				{
					this.OnvoteridChanging(value);
					this.SendPropertyChanging();
					this._voterid = value;
					this.SendPropertyChanged("voterid");
					this.OnvoteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empoyeeid", DbType="VarChar(15)")]
		public string empoyeeid
		{
			get
			{
				return this._empoyeeid;
			}
			set
			{
				if ((this._empoyeeid != value))
				{
					this.OnempoyeeidChanging(value);
					this.SendPropertyChanging();
					this._empoyeeid = value;
					this.SendPropertyChanged("empoyeeid");
					this.OnempoyeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sisterMst_tbl_sisterIdentity", Storage="_tbl_sisterMst", ThisKey="sisterid", OtherKey="sisterid", IsForeignKey=true)]
		public tbl_sisterMst tbl_sisterMst
		{
			get
			{
				return this._tbl_sisterMst.Entity;
			}
			set
			{
				tbl_sisterMst previousValue = this._tbl_sisterMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_sisterMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_sisterMst.Entity = null;
						previousValue.tbl_sisterIdentities.Remove(this);
					}
					this._tbl_sisterMst.Entity = value;
					if ((value != null))
					{
						value.tbl_sisterIdentities.Add(this);
						this._sisterid = value.sisterid;
					}
					else
					{
						this._sisterid = default(int);
					}
					this.SendPropertyChanged("tbl_sisterMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_sisterMst")]
	public partial class tbl_sisterMst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _hid;
		
		private int _sisterid;
		
		private System.Nullable<System.DateTime> _reg_dt;
		
		private string _fname;
		
		private string _mname;
		
		private string _lname;
		
		private string _contact;
		
		private System.Nullable<System.DateTime> _dob;
		
		private string _birthplace;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<char> _gender;
		
		private System.Nullable<char> _maritalstatus;
		
		private string _bloodgroup;
		
		private System.Nullable<decimal> _dheight;
		
		private System.Nullable<decimal> _dweight;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_sisterContact> _tbl_sisterContacts;
		
		private EntitySet<tbl_sisterIdentity> _tbl_sisterIdentities;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(System.Nullable<int> value);
    partial void OnhidChanged();
    partial void OnsisteridChanging(int value);
    partial void OnsisteridChanged();
    partial void Onreg_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onreg_dtChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void OnbirthplaceChanging(string value);
    partial void OnbirthplaceChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OngenderChanging(System.Nullable<char> value);
    partial void OngenderChanged();
    partial void OnmaritalstatusChanging(System.Nullable<char> value);
    partial void OnmaritalstatusChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OndheightChanging(System.Nullable<decimal> value);
    partial void OndheightChanged();
    partial void OndweightChanging(System.Nullable<decimal> value);
    partial void OndweightChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_sisterMst()
		{
			this._tbl_sisterContacts = new EntitySet<tbl_sisterContact>(new Action<tbl_sisterContact>(this.attach_tbl_sisterContacts), new Action<tbl_sisterContact>(this.detach_tbl_sisterContacts));
			this._tbl_sisterIdentities = new EntitySet<tbl_sisterIdentity>(new Action<tbl_sisterIdentity>(this.attach_tbl_sisterIdentities), new Action<tbl_sisterIdentity>(this.detach_tbl_sisterIdentities));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int")]
		public System.Nullable<int> hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisterid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sisterid
		{
			get
			{
				return this._sisterid;
			}
			set
			{
				if ((this._sisterid != value))
				{
					this.OnsisteridChanging(value);
					this.SendPropertyChanging();
					this._sisterid = value;
					this.SendPropertyChanged("sisterid");
					this.OnsisteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> reg_dt
		{
			get
			{
				return this._reg_dt;
			}
			set
			{
				if ((this._reg_dt != value))
				{
					this.Onreg_dtChanging(value);
					this.SendPropertyChanging();
					this._reg_dt = value;
					this.SendPropertyChanged("reg_dt");
					this.Onreg_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(10)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(10)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(10)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(10)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthplace", DbType="VarChar(15)")]
		public string birthplace
		{
			get
			{
				return this._birthplace;
			}
			set
			{
				if ((this._birthplace != value))
				{
					this.OnbirthplaceChanging(value);
					this.SendPropertyChanging();
					this._birthplace = value;
					this.SendPropertyChanged("birthplace");
					this.OnbirthplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1)")]
		public System.Nullable<char> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="Char(1)")]
		public System.Nullable<char> maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(3)")]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dheight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> dheight
		{
			get
			{
				return this._dheight;
			}
			set
			{
				if ((this._dheight != value))
				{
					this.OndheightChanging(value);
					this.SendPropertyChanging();
					this._dheight = value;
					this.SendPropertyChanged("dheight");
					this.OndheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dweight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> dweight
		{
			get
			{
				return this._dweight;
			}
			set
			{
				if ((this._dweight != value))
				{
					this.OndweightChanging(value);
					this.SendPropertyChanging();
					this._dweight = value;
					this.SendPropertyChanged("dweight");
					this.OndweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sisterMst_tbl_sisterContact", Storage="_tbl_sisterContacts", ThisKey="sisterid", OtherKey="sisterid")]
		public EntitySet<tbl_sisterContact> tbl_sisterContacts
		{
			get
			{
				return this._tbl_sisterContacts;
			}
			set
			{
				this._tbl_sisterContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_sisterMst_tbl_sisterIdentity", Storage="_tbl_sisterIdentities", ThisKey="sisterid", OtherKey="sisterid")]
		public EntitySet<tbl_sisterIdentity> tbl_sisterIdentities
		{
			get
			{
				return this._tbl_sisterIdentities;
			}
			set
			{
				this._tbl_sisterIdentities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_sisterMst", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_sisterMsts.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_sisterMsts.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_sisterContacts(tbl_sisterContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sisterMst = this;
		}
		
		private void detach_tbl_sisterContacts(tbl_sisterContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sisterMst = null;
		}
		
		private void attach_tbl_sisterIdentities(tbl_sisterIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sisterMst = this;
		}
		
		private void detach_tbl_sisterIdentities(tbl_sisterIdentity entity)
		{
			this.SendPropertyChanging();
			entity.tbl_sisterMst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_treatdisease")]
	public partial class tbl_treatdisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _treatmentid;
		
		private int _patientid;
		
		private int _srno;
		
		private string _diseasename;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
		private EntityRef<tbl_treatment> _tbl_treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntreatmentidChanging(int value);
    partial void OntreatmentidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnsrnoChanging(int value);
    partial void OnsrnoChanged();
    partial void OndiseasenameChanging(string value);
    partial void OndiseasenameChanged();
    #endregion
		
		public tbl_treatdisease()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			this._tbl_treatment = default(EntityRef<tbl_treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int treatmentid
		{
			get
			{
				return this._treatmentid;
			}
			set
			{
				if ((this._treatmentid != value))
				{
					if (this._tbl_treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntreatmentidChanging(value);
					this.SendPropertyChanging();
					this._treatmentid = value;
					this.SendPropertyChanged("treatmentid");
					this.OntreatmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int srno
		{
			get
			{
				return this._srno;
			}
			set
			{
				if ((this._srno != value))
				{
					this.OnsrnoChanging(value);
					this.SendPropertyChanging();
					this._srno = value;
					this.SendPropertyChanged("srno");
					this.OnsrnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diseasename", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string diseasename
		{
			get
			{
				return this._diseasename;
			}
			set
			{
				if ((this._diseasename != value))
				{
					this.OndiseasenameChanging(value);
					this.SendPropertyChanging();
					this._diseasename = value;
					this.SendPropertyChanged("diseasename");
					this.OndiseasenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatdisease", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_treatdiseases.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_treatdiseases.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatdisease", Storage="_tbl_treatment", ThisKey="treatmentid", OtherKey="treatmentid", IsForeignKey=true)]
		public tbl_treatment tbl_treatment
		{
			get
			{
				return this._tbl_treatment.Entity;
			}
			set
			{
				tbl_treatment previousValue = this._tbl_treatment.Entity;
				if (((previousValue != value) 
							|| (this._tbl_treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_treatment.Entity = null;
						previousValue.tbl_treatdiseases.Remove(this);
					}
					this._tbl_treatment.Entity = value;
					if ((value != null))
					{
						value.tbl_treatdiseases.Add(this);
						this._treatmentid = value.treatmentid;
					}
					else
					{
						this._treatmentid = default(int);
					}
					this.SendPropertyChanged("tbl_treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_treatinvestigation")]
	public partial class tbl_treatinvestigation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _treatmentid;
		
		private int _patientid;
		
		private int _investigationid;
		
		private System.Nullable<bool> _cbc;
		
		private System.Nullable<bool> _hiv;
		
		private System.Nullable<bool> _urinecomp;
		
		private System.Nullable<bool> _r_b_sugar;
		
		private System.Nullable<bool> _hbsagdieseas;
		
		private System.Nullable<bool> _esr;
		
		private System.Nullable<bool> _mt;
		
		private System.Nullable<bool> _r_a_factor;
		
		private System.Nullable<bool> _fitness_certificate;
		
		private System.Nullable<bool> _a_scan;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
		private EntityRef<tbl_treatment> _tbl_treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntreatmentidChanging(int value);
    partial void OntreatmentidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OninvestigationidChanging(int value);
    partial void OninvestigationidChanged();
    partial void OncbcChanging(System.Nullable<bool> value);
    partial void OncbcChanged();
    partial void OnhivChanging(System.Nullable<bool> value);
    partial void OnhivChanged();
    partial void OnurinecompChanging(System.Nullable<bool> value);
    partial void OnurinecompChanged();
    partial void Onr_b_sugarChanging(System.Nullable<bool> value);
    partial void Onr_b_sugarChanged();
    partial void OnhbsagdieseasChanging(System.Nullable<bool> value);
    partial void OnhbsagdieseasChanged();
    partial void OnesrChanging(System.Nullable<bool> value);
    partial void OnesrChanged();
    partial void OnmtChanging(System.Nullable<bool> value);
    partial void OnmtChanged();
    partial void Onr_a_factorChanging(System.Nullable<bool> value);
    partial void Onr_a_factorChanged();
    partial void Onfitness_certificateChanging(System.Nullable<bool> value);
    partial void Onfitness_certificateChanged();
    partial void Ona_scanChanging(System.Nullable<bool> value);
    partial void Ona_scanChanged();
    #endregion
		
		public tbl_treatinvestigation()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			this._tbl_treatment = default(EntityRef<tbl_treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int treatmentid
		{
			get
			{
				return this._treatmentid;
			}
			set
			{
				if ((this._treatmentid != value))
				{
					if (this._tbl_treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntreatmentidChanging(value);
					this.SendPropertyChanging();
					this._treatmentid = value;
					this.SendPropertyChanged("treatmentid");
					this.OntreatmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investigationid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int investigationid
		{
			get
			{
				return this._investigationid;
			}
			set
			{
				if ((this._investigationid != value))
				{
					this.OninvestigationidChanging(value);
					this.SendPropertyChanging();
					this._investigationid = value;
					this.SendPropertyChanged("investigationid");
					this.OninvestigationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cbc", DbType="Bit")]
		public System.Nullable<bool> cbc
		{
			get
			{
				return this._cbc;
			}
			set
			{
				if ((this._cbc != value))
				{
					this.OncbcChanging(value);
					this.SendPropertyChanging();
					this._cbc = value;
					this.SendPropertyChanged("cbc");
					this.OncbcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hiv", DbType="Bit")]
		public System.Nullable<bool> hiv
		{
			get
			{
				return this._hiv;
			}
			set
			{
				if ((this._hiv != value))
				{
					this.OnhivChanging(value);
					this.SendPropertyChanging();
					this._hiv = value;
					this.SendPropertyChanged("hiv");
					this.OnhivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urinecomp", DbType="Bit")]
		public System.Nullable<bool> urinecomp
		{
			get
			{
				return this._urinecomp;
			}
			set
			{
				if ((this._urinecomp != value))
				{
					this.OnurinecompChanging(value);
					this.SendPropertyChanging();
					this._urinecomp = value;
					this.SendPropertyChanged("urinecomp");
					this.OnurinecompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_b_sugar", DbType="Bit")]
		public System.Nullable<bool> r_b_sugar
		{
			get
			{
				return this._r_b_sugar;
			}
			set
			{
				if ((this._r_b_sugar != value))
				{
					this.Onr_b_sugarChanging(value);
					this.SendPropertyChanging();
					this._r_b_sugar = value;
					this.SendPropertyChanged("r_b_sugar");
					this.Onr_b_sugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hbsagdieseas", DbType="Bit")]
		public System.Nullable<bool> hbsagdieseas
		{
			get
			{
				return this._hbsagdieseas;
			}
			set
			{
				if ((this._hbsagdieseas != value))
				{
					this.OnhbsagdieseasChanging(value);
					this.SendPropertyChanging();
					this._hbsagdieseas = value;
					this.SendPropertyChanged("hbsagdieseas");
					this.OnhbsagdieseasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_esr", DbType="Bit")]
		public System.Nullable<bool> esr
		{
			get
			{
				return this._esr;
			}
			set
			{
				if ((this._esr != value))
				{
					this.OnesrChanging(value);
					this.SendPropertyChanging();
					this._esr = value;
					this.SendPropertyChanged("esr");
					this.OnesrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mt", DbType="Bit")]
		public System.Nullable<bool> mt
		{
			get
			{
				return this._mt;
			}
			set
			{
				if ((this._mt != value))
				{
					this.OnmtChanging(value);
					this.SendPropertyChanging();
					this._mt = value;
					this.SendPropertyChanged("mt");
					this.OnmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_a_factor", DbType="Bit")]
		public System.Nullable<bool> r_a_factor
		{
			get
			{
				return this._r_a_factor;
			}
			set
			{
				if ((this._r_a_factor != value))
				{
					this.Onr_a_factorChanging(value);
					this.SendPropertyChanging();
					this._r_a_factor = value;
					this.SendPropertyChanged("r_a_factor");
					this.Onr_a_factorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fitness_certificate", DbType="Bit")]
		public System.Nullable<bool> fitness_certificate
		{
			get
			{
				return this._fitness_certificate;
			}
			set
			{
				if ((this._fitness_certificate != value))
				{
					this.Onfitness_certificateChanging(value);
					this.SendPropertyChanging();
					this._fitness_certificate = value;
					this.SendPropertyChanged("fitness_certificate");
					this.Onfitness_certificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_scan", DbType="Bit")]
		public System.Nullable<bool> a_scan
		{
			get
			{
				return this._a_scan;
			}
			set
			{
				if ((this._a_scan != value))
				{
					this.Ona_scanChanging(value);
					this.SendPropertyChanging();
					this._a_scan = value;
					this.SendPropertyChanged("a_scan");
					this.Ona_scanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatinvestigation", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_treatinvestigations.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_treatinvestigations.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatinvestigation", Storage="_tbl_treatment", ThisKey="treatmentid", OtherKey="treatmentid", IsForeignKey=true)]
		public tbl_treatment tbl_treatment
		{
			get
			{
				return this._tbl_treatment.Entity;
			}
			set
			{
				tbl_treatment previousValue = this._tbl_treatment.Entity;
				if (((previousValue != value) 
							|| (this._tbl_treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_treatment.Entity = null;
						previousValue.tbl_treatinvestigations.Remove(this);
					}
					this._tbl_treatment.Entity = value;
					if ((value != null))
					{
						value.tbl_treatinvestigations.Add(this);
						this._treatmentid = value.treatmentid;
					}
					else
					{
						this._treatmentid = default(int);
					}
					this.SendPropertyChanged("tbl_treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_treatmedicine")]
	public partial class tbl_treatmedicine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _treatmentid;
		
		private int _patientid;
		
		private int _medicineid;
		
		private string _particular;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<char> _m;
		
		private System.Nullable<char> _a;
		
		private System.Nullable<char> _e;
		
		private System.Nullable<char> _n;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
		private EntityRef<tbl_treatment> _tbl_treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntreatmentidChanging(int value);
    partial void OntreatmentidChanged();
    partial void OnpatientidChanging(int value);
    partial void OnpatientidChanged();
    partial void OnmedicineidChanging(int value);
    partial void OnmedicineidChanged();
    partial void OnparticularChanging(string value);
    partial void OnparticularChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnmChanging(System.Nullable<char> value);
    partial void OnmChanged();
    partial void OnaChanging(System.Nullable<char> value);
    partial void OnaChanged();
    partial void OneChanging(System.Nullable<char> value);
    partial void OneChanged();
    partial void OnnChanging(System.Nullable<char> value);
    partial void OnnChanged();
    #endregion
		
		public tbl_treatmedicine()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			this._tbl_treatment = default(EntityRef<tbl_treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int treatmentid
		{
			get
			{
				return this._treatmentid;
			}
			set
			{
				if ((this._treatmentid != value))
				{
					if (this._tbl_treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntreatmentidChanging(value);
					this.SendPropertyChanging();
					this._treatmentid = value;
					this.SendPropertyChanged("treatmentid");
					this.OntreatmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int NOT NULL")]
		public int patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicineid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medicineid
		{
			get
			{
				return this._medicineid;
			}
			set
			{
				if ((this._medicineid != value))
				{
					this.OnmedicineidChanging(value);
					this.SendPropertyChanging();
					this._medicineid = value;
					this.SendPropertyChanged("medicineid");
					this.OnmedicineidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_particular", DbType="VarChar(20)")]
		public string particular
		{
			get
			{
				return this._particular;
			}
			set
			{
				if ((this._particular != value))
				{
					this.OnparticularChanging(value);
					this.SendPropertyChanging();
					this._particular = value;
					this.SendPropertyChanged("particular");
					this.OnparticularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m", DbType="Char(1)")]
		public System.Nullable<char> m
		{
			get
			{
				return this._m;
			}
			set
			{
				if ((this._m != value))
				{
					this.OnmChanging(value);
					this.SendPropertyChanging();
					this._m = value;
					this.SendPropertyChanged("m");
					this.OnmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a", DbType="Char(1)")]
		public System.Nullable<char> a
		{
			get
			{
				return this._a;
			}
			set
			{
				if ((this._a != value))
				{
					this.OnaChanging(value);
					this.SendPropertyChanging();
					this._a = value;
					this.SendPropertyChanged("a");
					this.OnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e", DbType="Char(1)")]
		public System.Nullable<char> e
		{
			get
			{
				return this._e;
			}
			set
			{
				if ((this._e != value))
				{
					this.OneChanging(value);
					this.SendPropertyChanging();
					this._e = value;
					this.SendPropertyChanged("e");
					this.OneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n", DbType="Char(1)")]
		public System.Nullable<char> n
		{
			get
			{
				return this._n;
			}
			set
			{
				if ((this._n != value))
				{
					this.OnnChanging(value);
					this.SendPropertyChanging();
					this._n = value;
					this.SendPropertyChanged("n");
					this.OnnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatmedicine", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_treatmedicines.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_treatmedicines.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(int);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatmedicine", Storage="_tbl_treatment", ThisKey="treatmentid", OtherKey="treatmentid", IsForeignKey=true)]
		public tbl_treatment tbl_treatment
		{
			get
			{
				return this._tbl_treatment.Entity;
			}
			set
			{
				tbl_treatment previousValue = this._tbl_treatment.Entity;
				if (((previousValue != value) 
							|| (this._tbl_treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_treatment.Entity = null;
						previousValue.tbl_treatmedicines.Remove(this);
					}
					this._tbl_treatment.Entity = value;
					if ((value != null))
					{
						value.tbl_treatmedicines.Add(this);
						this._treatmentid = value.treatmentid;
					}
					else
					{
						this._treatmentid = default(int);
					}
					this.SendPropertyChanged("tbl_treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_treatment")]
	public partial class tbl_treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _treatmentid;
		
		private System.Nullable<int> _patientid;
		
		private string _advice;
		
		private System.Nullable<System.DateTime> _followup_dt;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private EntitySet<tbl_treatdisease> _tbl_treatdiseases;
		
		private EntitySet<tbl_treatinvestigation> _tbl_treatinvestigations;
		
		private EntitySet<tbl_treatmedicine> _tbl_treatmedicines;
		
		private EntitySet<tbl_treatVision> _tbl_treatVisions;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OntreatmentidChanging(int value);
    partial void OntreatmentidChanged();
    partial void OnpatientidChanging(System.Nullable<int> value);
    partial void OnpatientidChanged();
    partial void OnadviceChanging(string value);
    partial void OnadviceChanged();
    partial void Onfollowup_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onfollowup_dtChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    #endregion
		
		public tbl_treatment()
		{
			this._tbl_treatdiseases = new EntitySet<tbl_treatdisease>(new Action<tbl_treatdisease>(this.attach_tbl_treatdiseases), new Action<tbl_treatdisease>(this.detach_tbl_treatdiseases));
			this._tbl_treatinvestigations = new EntitySet<tbl_treatinvestigation>(new Action<tbl_treatinvestigation>(this.attach_tbl_treatinvestigations), new Action<tbl_treatinvestigation>(this.detach_tbl_treatinvestigations));
			this._tbl_treatmedicines = new EntitySet<tbl_treatmedicine>(new Action<tbl_treatmedicine>(this.attach_tbl_treatmedicines), new Action<tbl_treatmedicine>(this.detach_tbl_treatmedicines));
			this._tbl_treatVisions = new EntitySet<tbl_treatVision>(new Action<tbl_treatVision>(this.attach_tbl_treatVisions), new Action<tbl_treatVision>(this.detach_tbl_treatVisions));
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL")]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int treatmentid
		{
			get
			{
				return this._treatmentid;
			}
			set
			{
				if ((this._treatmentid != value))
				{
					this.OntreatmentidChanging(value);
					this.SendPropertyChanging();
					this._treatmentid = value;
					this.SendPropertyChanged("treatmentid");
					this.OntreatmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int")]
		public System.Nullable<int> patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_advice", DbType="VarChar(300)")]
		public string advice
		{
			get
			{
				return this._advice;
			}
			set
			{
				if ((this._advice != value))
				{
					this.OnadviceChanging(value);
					this.SendPropertyChanging();
					this._advice = value;
					this.SendPropertyChanged("advice");
					this.OnadviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_followup_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> followup_dt
		{
			get
			{
				return this._followup_dt;
			}
			set
			{
				if ((this._followup_dt != value))
				{
					this.Onfollowup_dtChanging(value);
					this.SendPropertyChanging();
					this._followup_dt = value;
					this.SendPropertyChanged("followup_dt");
					this.Onfollowup_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatdisease", Storage="_tbl_treatdiseases", ThisKey="treatmentid", OtherKey="treatmentid")]
		public EntitySet<tbl_treatdisease> tbl_treatdiseases
		{
			get
			{
				return this._tbl_treatdiseases;
			}
			set
			{
				this._tbl_treatdiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatinvestigation", Storage="_tbl_treatinvestigations", ThisKey="treatmentid", OtherKey="treatmentid")]
		public EntitySet<tbl_treatinvestigation> tbl_treatinvestigations
		{
			get
			{
				return this._tbl_treatinvestigations;
			}
			set
			{
				this._tbl_treatinvestigations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatmedicine", Storage="_tbl_treatmedicines", ThisKey="treatmentid", OtherKey="treatmentid")]
		public EntitySet<tbl_treatmedicine> tbl_treatmedicines
		{
			get
			{
				return this._tbl_treatmedicines;
			}
			set
			{
				this._tbl_treatmedicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatVision", Storage="_tbl_treatVisions", ThisKey="treatmentid", OtherKey="treatmentid")]
		public EntitySet<tbl_treatVision> tbl_treatVisions
		{
			get
			{
				return this._tbl_treatVisions;
			}
			set
			{
				this._tbl_treatVisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_treatment", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_treatments.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_treatments.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatment", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_treatments.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_treatments.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_treatdiseases(tbl_treatdisease entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = this;
		}
		
		private void detach_tbl_treatdiseases(tbl_treatdisease entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = null;
		}
		
		private void attach_tbl_treatinvestigations(tbl_treatinvestigation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = this;
		}
		
		private void detach_tbl_treatinvestigations(tbl_treatinvestigation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = null;
		}
		
		private void attach_tbl_treatmedicines(tbl_treatmedicine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = this;
		}
		
		private void detach_tbl_treatmedicines(tbl_treatmedicine entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = null;
		}
		
		private void attach_tbl_treatVisions(tbl_treatVision entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = this;
		}
		
		private void detach_tbl_treatVisions(tbl_treatVision entity)
		{
			this.SendPropertyChanging();
			entity.tbl_treatment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_treatVision")]
	public partial class tbl_treatVision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _treatmentid;
		
		private System.Nullable<int> _patientid;
		
		private int _visionid;
		
		private string _eye;
		
		private string _vn;
		
		private string _area;
		
		private string _sph;
		
		private string _cyl;
		
		private string _axis;
		
		private EntityRef<tbl_patientMst> _tbl_patientMst;
		
		private EntityRef<tbl_treatment> _tbl_treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntreatmentidChanging(int value);
    partial void OntreatmentidChanged();
    partial void OnpatientidChanging(System.Nullable<int> value);
    partial void OnpatientidChanged();
    partial void OnvisionidChanging(int value);
    partial void OnvisionidChanged();
    partial void OneyeChanging(string value);
    partial void OneyeChanged();
    partial void OnvnChanging(string value);
    partial void OnvnChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OnsphChanging(string value);
    partial void OnsphChanged();
    partial void OncylChanging(string value);
    partial void OncylChanged();
    partial void OnaxisChanging(string value);
    partial void OnaxisChanged();
    #endregion
		
		public tbl_treatVision()
		{
			this._tbl_patientMst = default(EntityRef<tbl_patientMst>);
			this._tbl_treatment = default(EntityRef<tbl_treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int treatmentid
		{
			get
			{
				return this._treatmentid;
			}
			set
			{
				if ((this._treatmentid != value))
				{
					if (this._tbl_treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntreatmentidChanging(value);
					this.SendPropertyChanging();
					this._treatmentid = value;
					this.SendPropertyChanged("treatmentid");
					this.OntreatmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int")]
		public System.Nullable<int> patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					if (this._tbl_patientMst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int visionid
		{
			get
			{
				return this._visionid;
			}
			set
			{
				if ((this._visionid != value))
				{
					this.OnvisionidChanging(value);
					this.SendPropertyChanging();
					this._visionid = value;
					this.SendPropertyChanged("visionid");
					this.OnvisionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eye", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string eye
		{
			get
			{
				return this._eye;
			}
			set
			{
				if ((this._eye != value))
				{
					this.OneyeChanging(value);
					this.SendPropertyChanging();
					this._eye = value;
					this.SendPropertyChanged("eye");
					this.OneyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vn", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string vn
		{
			get
			{
				return this._vn;
			}
			set
			{
				if ((this._vn != value))
				{
					this.OnvnChanging(value);
					this.SendPropertyChanging();
					this._vn = value;
					this.SendPropertyChanged("vn");
					this.OnvnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sph", DbType="VarChar(5)")]
		public string sph
		{
			get
			{
				return this._sph;
			}
			set
			{
				if ((this._sph != value))
				{
					this.OnsphChanging(value);
					this.SendPropertyChanging();
					this._sph = value;
					this.SendPropertyChanged("sph");
					this.OnsphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cyl", DbType="VarChar(5)")]
		public string cyl
		{
			get
			{
				return this._cyl;
			}
			set
			{
				if ((this._cyl != value))
				{
					this.OncylChanging(value);
					this.SendPropertyChanging();
					this._cyl = value;
					this.SendPropertyChanged("cyl");
					this.OncylChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_axis", DbType="VarChar(5)")]
		public string axis
		{
			get
			{
				return this._axis;
			}
			set
			{
				if ((this._axis != value))
				{
					this.OnaxisChanging(value);
					this.SendPropertyChanging();
					this._axis = value;
					this.SendPropertyChanged("axis");
					this.OnaxisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_patientMst_tbl_treatVision", Storage="_tbl_patientMst", ThisKey="patientid", OtherKey="patientid", IsForeignKey=true)]
		public tbl_patientMst tbl_patientMst
		{
			get
			{
				return this._tbl_patientMst.Entity;
			}
			set
			{
				tbl_patientMst previousValue = this._tbl_patientMst.Entity;
				if (((previousValue != value) 
							|| (this._tbl_patientMst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_patientMst.Entity = null;
						previousValue.tbl_treatVisions.Remove(this);
					}
					this._tbl_patientMst.Entity = value;
					if ((value != null))
					{
						value.tbl_treatVisions.Add(this);
						this._patientid = value.patientid;
					}
					else
					{
						this._patientid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_patientMst");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_treatment_tbl_treatVision", Storage="_tbl_treatment", ThisKey="treatmentid", OtherKey="treatmentid", IsForeignKey=true)]
		public tbl_treatment tbl_treatment
		{
			get
			{
				return this._tbl_treatment.Entity;
			}
			set
			{
				tbl_treatment previousValue = this._tbl_treatment.Entity;
				if (((previousValue != value) 
							|| (this._tbl_treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_treatment.Entity = null;
						previousValue.tbl_treatVisions.Remove(this);
					}
					this._tbl_treatment.Entity = value;
					if ((value != null))
					{
						value.tbl_treatVisions.Add(this);
						this._treatmentid = value.treatmentid;
					}
					else
					{
						this._treatmentid = default(int);
					}
					this.SendPropertyChanged("tbl_treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_user")]
	public partial class tbl_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hid;
		
		private int _userid;
		
		private string _username;
		
		private string _pass;
		
		private string _fname;
		
		private string _mname;
		
		private string _lname;
		
		private string _contact;
		
		private string _email;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _createby;
		
		private System.Nullable<System.DateTime> _create_dt;
		
		private string _updateby;
		
		private System.Nullable<System.DateTime> _update_dt;
		
		private System.Nullable<int> _roleid;
		
		private EntityRef<tbl_hospital> _tbl_hospital;
		
		private EntityRef<tbl_role> _tbl_role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhidChanging(int value);
    partial void OnhidChanged();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OncreatebyChanging(string value);
    partial void OncreatebyChanged();
    partial void Oncreate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dtChanged();
    partial void OnupdatebyChanging(string value);
    partial void OnupdatebyChanged();
    partial void Onupdate_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dtChanged();
    partial void OnroleidChanging(System.Nullable<int> value);
    partial void OnroleidChanged();
    #endregion
		
		public tbl_user()
		{
			this._tbl_hospital = default(EntityRef<tbl_hospital>);
			this._tbl_role = default(EntityRef<tbl_role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hid
		{
			get
			{
				return this._hid;
			}
			set
			{
				if ((this._hid != value))
				{
					if (this._tbl_hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhidChanging(value);
					this.SendPropertyChanging();
					this._hid = value;
					this.SendPropertyChanged("hid");
					this.OnhidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(10)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(10)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(10)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createby", DbType="VarChar(10)")]
		public string createby
		{
			get
			{
				return this._createby;
			}
			set
			{
				if ((this._createby != value))
				{
					this.OncreatebyChanging(value);
					this.SendPropertyChanging();
					this._createby = value;
					this.SendPropertyChanged("createby");
					this.OncreatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_dt
		{
			get
			{
				return this._create_dt;
			}
			set
			{
				if ((this._create_dt != value))
				{
					this.Oncreate_dtChanging(value);
					this.SendPropertyChanging();
					this._create_dt = value;
					this.SendPropertyChanged("create_dt");
					this.Oncreate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateby", DbType="VarChar(10)")]
		public string updateby
		{
			get
			{
				return this._updateby;
			}
			set
			{
				if ((this._updateby != value))
				{
					this.OnupdatebyChanging(value);
					this.SendPropertyChanging();
					this._updateby = value;
					this.SendPropertyChanged("updateby");
					this.OnupdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_dt
		{
			get
			{
				return this._update_dt;
			}
			set
			{
				if ((this._update_dt != value))
				{
					this.Onupdate_dtChanging(value);
					this.SendPropertyChanging();
					this._update_dt = value;
					this.SendPropertyChanged("update_dt");
					this.Onupdate_dtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleid", DbType="Int")]
		public System.Nullable<int> roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if ((this._roleid != value))
				{
					if (this._tbl_role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_hospital_tbl_user", Storage="_tbl_hospital", ThisKey="hid", OtherKey="hid", IsForeignKey=true)]
		public tbl_hospital tbl_hospital
		{
			get
			{
				return this._tbl_hospital.Entity;
			}
			set
			{
				tbl_hospital previousValue = this._tbl_hospital.Entity;
				if (((previousValue != value) 
							|| (this._tbl_hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_hospital.Entity = null;
						previousValue.tbl_users.Remove(this);
					}
					this._tbl_hospital.Entity = value;
					if ((value != null))
					{
						value.tbl_users.Add(this);
						this._hid = value.hid;
					}
					else
					{
						this._hid = default(int);
					}
					this.SendPropertyChanged("tbl_hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_role_tbl_user", Storage="_tbl_role", ThisKey="roleid", OtherKey="roleid", IsForeignKey=true)]
		public tbl_role tbl_role
		{
			get
			{
				return this._tbl_role.Entity;
			}
			set
			{
				tbl_role previousValue = this._tbl_role.Entity;
				if (((previousValue != value) 
							|| (this._tbl_role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_role.Entity = null;
						previousValue.tbl_users.Remove(this);
					}
					this._tbl_role.Entity = value;
					if ((value != null))
					{
						value.tbl_users.Add(this);
						this._roleid = value.roleid;
					}
					else
					{
						this._roleid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
