@model Kamala_Eye_Clinic.Models.PatientMaster

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/_StartupLayout.cshtml";
}
<div class="row" style="background-color:white">
    @using (Html.BeginForm())
            {
        @Html.AntiForgeryToken()

        <div class="page-header">
            <h4>
                Patient Registration : <span style="font-size:14px">
                    @if (ViewBag != null)
                {
                        <label>@ViewBag.msg </label>
                    }
                </span>
            </h4>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-lg-12 form-group">
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.DropDownListFor(model => model.title, new SelectList(new[] { "MR.", "MS.", "MRS." }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12 form-group">
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.fname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.mname, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.mname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.mname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.lname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12 form-group">
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.contact, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.dob, new { @class = "form-control date", placeholder = "mm/dd/yyyy" })
                        <div class="input-group-addon">
                            <i class="fa fa-calendar">
                            </i>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.birthplace, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.birthplace, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.birthplace, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12 form-group">
            <div class="col-lg-4">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.TextBoxFor(model => model.age, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 ">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.DropDownListFor(model => model.gender, new SelectList(new[] { "Male", "Female", "Other" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 ">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.maritalstatus, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.DropDownListFor(model => model.maritalstatus, new SelectList(new[] { "Maried", "Unmaried" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.maritalstatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-12 form-group">
            <div class="col-lg-4 ">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.bloodgroup, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    @Html.DropDownListFor(model => model.bloodgroup, new SelectList(new[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.bloodgroup, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 ">
                <div class="col-lg-5">
                    @Html.LabelFor(model => model.pheight, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-lg-7">
                    <div class="input-group ">
                        @Html.TextBoxFor(model => model.pheight, new { @class = "form-control" })
                        <div class="input-group-addon">
                            Cm.
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.pheight, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 ">
                <div class="col-lg-5">

                    @Html.LabelFor(model => model.pweight, htmlAttributes: new { @class = "control-label" })

                </div>
                <div class="col-lg-7">
                    <div class="input-group ">
                        @Html.TextBoxFor(model => model.pweight, new { @class = "form-control" })
                        <div class="input-group-addon">
                            Kg.
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.pweight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-lg-12 form-group">
            <div class="col-lg-12" align="center">
                @Html.HiddenFor(model => model.CMD)
                @if (Model.CMD == null)
                {
                    <input type="submit" class="btn btn-default btn-info " value="Save" name="SubmitBtn" />
                }
                else
                {
                    <input type="submit" class="btn btn-default btn-primary " value="Update" name="SubmitBtn" />
                        @* <input type="submit" class="btn btn-default btn-danger" value="Delete" name="SubmitBtn" />*@
                }
                <input type="reset" class="btn btn-warning " value="Reset" />
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("  Back To List", "PatientDetails", "Patient", new { @class = "fa fa-arrow-circle-o-left btn btn-info btn-sm" })
</div>

